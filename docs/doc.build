<?xml version="1.0" ?>
<project name="iBATIS.NET reference" default="refDoc" >

	<property name="project.dao.version" value="1.9.1" unless="${property::exists('project.dao.version')}" />
	<property name="project.sqlMap.version" value="1.6.3" unless="${property::exists('project.sqlMap.version')}" />

	<!-- properties for docbook, xsltproc and fop libraries and executables -->
        <include buildfile="doc.build.include.windows" />
        <!--
        In preparation for an attempt to build the doc on linux, where it is
        easier to setup docbook and related tools.
        Roger Champagne, 2010-Oct-22 
          -->
        <!--  
        <include buildfile="doc.build.include.linux" />
        -->
        
	<!-- The current Guide and version
	
	     THESE PROPERTIES ARE REDUNDENT WITH THE ONES IN daoDoc, sqlMapDoc
	     and totorialDoc TARGETS.
	     
	     THESE PROPERTIES ARE LIKELY ONLY USED BY THE docHTML TARGET WHEN
	     CALLED DIRECTLY.
	     
	     CONSIDER REMOVING OR REARRANGING, THIS IS CONFUSING.
	     
	     SHOULD docHTML BE CALLED DIRECTLY? USEFUL FOR TESTING DOCBOOK,
	     BUT NOT MUCH ELSE.
	  
	  Roger Champagne, 2010-Oct-23
	  -->
	<property name="project.name" value="Data Access Guide" />
	<property name="guide.dir" value="dataMapperGuide" />
	<property name="project.version" value="project.sqlMap.version" />
	<!--
	<property name="guide.dir" value="dataAccessGuide" />
	<property name="project.version" value="project.dao.version" />
        -->
	<!-- the current language  -->	
	<property name="src.lang" value="en" />
	<property name="xml.src.dir" value="${guide.dir}/src/${src.lang}" />
	<property name="style.src.dir" value="${guide.dir}/styles" />

	<!-- ******************************* -->
	<!-- docbook reference documentation -->
	<!-- ******************************* -->
	<property name="doc.output.dir" value="output" />
	<!-- reference docbook source base directory -->	
	<property name="doc.ref.dir" value="reference" />
	<!-- reference docbook output base directory -->
	<property name="doc.ref.output.dir" value="${doc.output.dir}" />

	<!-- the main source code directory for the iBATIS.NET codebase  -->	
	<property name="src.dir" value="../src" />

	<target name="clean" description="Delete output and temporary directories.">
		<delete dir="${doc.output.dir}" failonerror="false"/>
	</target>

	<target name="allDoc" depends="clean, daoDoc, sqlMapDoc, tutorialDoc" description="Generate iBATIS.NET documentation" />
	
	<target name="refDoc" depends="clean, daoDoc, sqlMapDoc" description="Generate iBATIS.NET documentation" />

	<target name="daoDoc" description="Generate DataAccess documentation">
		<property name="project.name" value="Data Access Guide" />
		<property name="project.version" value="${project.dao.version}" />
		<property name="guide.dir" value="dataAccessGuide" />

		<property name="xml.src.dir" value="${guide.dir}/src/${src.lang}" />
		<property name="style.src.dir" value="${guide.dir}/styles" />

 		<call target="prepareDaoDocs" />
		<call target="docHtmlHelp" />
		<call target="docPDF" />
	</target>

	<target name="sqlMapDoc" description="Generate DataMapper documentation">
		<property name="project.name" value="Data Mapper Guide" />
		<property name="project.version" value="${project.sqlMap.version}" />
		<property name="guide.dir" value="dataMapperGuide" />
	
		<property name="xml.src.dir" value="${guide.dir}/src/${src.lang}" />
		<property name="style.src.dir" value="${guide.dir}/styles" />

		<call target="prepareSqlMapDocs" />
		<call target="docHtmlHelp" />
		<call target="docPDF" />
	</target>

	<target name="tutorialDoc" description="Generate DataMapper tutorial">
		<property name="project.name" value="Data Mapper tutorial" />
		<property name="project.version" value="${project.sqlMap.version}" />
		<property name="guide.dir" value="tutorial" />
	
		<property name="xml.src.dir" value="${guide.dir}/src/${src.lang}" />
		<property name="style.src.dir" value="${guide.dir}/styles" />

		<call target="docHtmlHelp" />
		<call target="docPDF" />
	</target>

	<target name="docHTML" depends="prepareDocsHTML" description="Build reference documentation to html">

		<exec program="${xsltproc.program}" 
		 failonerror="false"
		 commandline="--nonet -o ${doc.ref.output.dir}/${guide.dir}/${src.lang}/html/ ${style.src.dir}/html.xsl ${xml.src.dir}/index.xml" />

		<!-- copy dev guide images -->
		<copy todir="${doc.ref.output.dir}/${guide.dir}/${src.lang}/html/images">
		  <fileset basedir="${xml.src.dir}/images/">
			<include name="*.gif"/>
			<include name="*.svg"/>
			<include name="*.jpg"/>
			<include name="*.png"/>
		  </fileset>
		</copy>

		<!-- copy docBook images -->
		<copy todir="${doc.ref.output.dir}/${guide.dir}/${src.lang}/html/images">
		  <fileset basedir="${docbook.styles.dir}/images">
			<include name="**/*.gif"/>
			<include name="**/*.png"/>
		  </fileset>
		</copy>
	</target>

	<target name="docHtmlHelp" depends="docHTML" description="Build reference documentation to MS HTML-HELP">
		<mkdir dir="${doc.ref.output.dir}/${guide.dir}/${src.lang}/htmlhelp" />

		<!-- Build CHM guide  -->
		<exec program="hhc.exe" 
		failonerror="false"
		commandline="${doc.ref.output.dir}/${guide.dir}/${src.lang}/html/htmlhelp.hhp" />

		<!-- Copy CHM guide  -->
		<copy 
		file="${doc.ref.output.dir}/${guide.dir}/${src.lang}/html/doc.chm" 
		tofile="${doc.ref.output.dir}/${guide.dir}/${src.lang}/htmlhelp/${project.name}-${project.version}.chm">
		</copy>

		<!-- remove temp files -->
        <delete>
            <fileset basedir="${doc.ref.output.dir}/${guide.dir}/${src.lang}/html/">
                <!-- remove test files -->
                <include name="*.hhc" />
				<include name="*.chm" />
				<include name="*.hhp" />
            </fileset>
        </delete>
  </target>


	<target name="docPDF" description="Compile reference documentation to pdf">
		
		<!-- copy dev guide images -->
		<copy todir="${doc.ref.output.dir}/${guide.dir}/${src.lang}/pdf/images">
		  <fileset basedir="${xml.src.dir}/images/">
			<include name="*.gif"/>
			<include name="*.svg"/>
			<include name="*.jpg"/>
			<include name="*.png"/>
		  </fileset>
		</copy>

		<!-- copy docBook images -->
		<copy todir="${doc.ref.output.dir}/${guide.dir}/${src.lang}/html/images">
		  <fileset basedir="${docbook.styles.dir}/images">
			<include name="**/*.gif"/>
			<include name="**/*.png"/>
		  </fileset>
		</copy>

	   	<exec program="${xsltproc.program}" 
		 failonerror="false"
		 commandline="--stringparam fop1.extensions 1 --stringparam fop.extensions 0 --nonet -o ${doc.ref.output.dir}/${guide.dir}/${src.lang}/pdf/${guide.dir}_temp.fo ${style.src.dir}/fopdf.xsl ${xml.src.dir}/index.xml" />

	   	<exec program="${fop.program}" 
		 failonerror="false"
		 commandline="${doc.ref.output.dir}/${guide.dir}/${src.lang}/pdf/${guide.dir}_temp.fo ${doc.ref.output.dir}/${guide.dir}/${src.lang}/pdf/${guide.dir}.pdf" />

		<copy file="${doc.ref.output.dir}/${guide.dir}/${src.lang}/pdf/${guide.dir}.pdf" tofile="${doc.ref.output.dir}/${guide.dir}/${src.lang}/pdf/${project.name}-${project.version}.pdf" />

		<!-- remove temp files/dir -->
		<delete dir="${doc.ref.output.dir}/${guide.dir}/${src.lang}/pdf/images" failonerror="false"/>
		<delete file="${doc.ref.output.dir}/${guide.dir}/${src.lang}/pdf/${guide.dir}.pdf" failonerror="false"/>
		<delete file="${doc.ref.output.dir}/${guide.dir}/${src.lang}/pdf/${guide.dir}_temp.fo" failonerror="false"/>

	</target>

	<!-- Extra preparation for HTML documentation -->
	<target name="prepareDocsHTML">
		<mkdir dir="${doc.ref.output.dir}/${guide.dir}/${src.lang}/html" />
		<copy file="${style.src.dir}/html.css"
		todir="${doc.ref.output.dir}/${guide.dir}/${src.lang}/html"/>
	</target>
	

	<!-- Extra preparation for dao documentation (common to all formats)-->
	<target name="prepareDaoDocs" description="Extra preparation for the dao documentation (common to all formats)">
		<delete file="${xml.src.dir}/xsd.xml" failonerror="false"/>

		<loadfile property="doc.dao.schema" file="${src.dir}/IBatisNet.DataAccess/DaoConfig.xsd" />

		<copy file="${xml.src.dir}/xsd-template.xml" tofile="${xml.src.dir}/xsd.xml" >
			<filterchain>
				<replacestring from="@xsd-include@" to="${doc.dao.schema}"/>
			</filterchain>
		</copy> 
	</target>

 	<!-- Extra preparation for SqlMap documentation (common to all formats)-->
	<target name="prepareSqlMapDocs" description="Extra preparation for the SqlMap documentation (common to all formats)">
		<delete file="${xml.src.dir}/xsd-config.xml" failonerror="false"/>
 		<delete file="${xml.src.dir}/xsd-sqlMap.xml" failonerror="false"/>

		<loadfile property="doc.config.schema" file="${src.dir}/IBatisNet.DataMapper/SqlMapConfig.xsd" />
 		<loadfile property="doc.sqlMap.schema" file="${src.dir}/IBatisNet.DataMapper/SqlMap.xsd" />

		<copy file="${xml.src.dir}/xsd-config-template.xml" tofile="${xml.src.dir}/xsd-config.xml" >
			<filterchain>
				<replacestring from="@xsd-include@" to="${doc.config.schema}"/>
			</filterchain>
		</copy> 
		<copy file="${xml.src.dir}/xsd-sqlMap-template.xml" tofile="${xml.src.dir}/xsd-sqlMap.xml" >
			<filterchain>
				<replacestring from="@xsd-include@" to="${doc.sqlMap.schema}"/>
			</filterchain>
		</copy> 
	</target>

<!--
    
  copies content common to all docs to the dir in the ${doc.type.output.dir} property
 
  <target name="copycommoncontent">
    <mkdir dir="${doc.type.output.dir}"/>
    <copy todir="${doc.type.output.dir}">
      <fileset dir="${basedir}/${doc.ref.dir}/src/images">
        <include name="*.gif"/>
        <include name="*.svg"/>
        <include name="*.jpg"/>
        <include name="*.png"/>
      </fileset>
    </copy>
  </target>
	
 -->
</project>
