<?xml version="1.0" encoding="utf-8"?>
<sqlMap namespace="Category" 
xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
	
	<alias>
		<typeAlias alias="Category" type="IBatisNet.DataAccess.Test.Domain.Category, IBatisNet.DataAccess.Test"/>
	</alias>
	
	<statements>
	
		<select id="GetCategory" parameterClass="Integer" resultClass="Category">
			select
			Category_ID as [Id],
			Category_Name as [Name],
			Category_Guid as [Guid]
			from Categories  
			where Category_ID = #value# 
		</select>
		
		<!-- Test for statement as insert -->
		<!-- Needs to be <insert> vs <statement> for Access due to selectKey -->
		<insert id="InsertCategory" parameterClass="Category" resultClass="int">
			<selectKey property="Id" type="post" resultClass="int">
				select @@IDENTITY as [value];
            </selectKey>		
			insert into Categories  
				(Category_Name, Category_Guid) 
			values 
				(#Name#, #Guid:Guid#);
		</insert><!--Guid for Oledb, UniqueIdentifier for SqlClient,Odbc -->

		<!-- Test for Guid Parameter Class-->
		<statement id="InsertCategoryGuidParameterClass" parameterClass="Guid" resultClass="int">
			<selectKey property="Id" type="post" resultClass="int">
				select @@IDENTITY as [value];
            </selectKey>		
			insert into Categories  
				(Category_Name, Category_Guid) 
			values 
				('toto', #value:Guid#);
		</statement><!--Guid for Oledb, UniqueIdentifier for SqlClient,Odbc -->		
	
		<!-- JIRA 20 Test without specifying the dbtype-->
		<statement id="InsertCategoryGuidParameterClassJIRA20" parameterClass="Guid" resultClass="int">
			<selectKey property="Id" type="post" resultClass="int">
				select @@IDENTITY as [value];
            </selectKey>		
			insert into Categories  
				(Category_Name, Category_Guid) 
			values 
				('toto', #value#);
		</statement>
						
		<insert id="InsertCategoryViaInsertStatement" parameterClass="Category" >
			<selectKey property="Id" type="post" resultClass="int">
				select @@IDENTITY as [value];
            </selectKey>			
            insert into Categories  
				(Category_Name, Category_Guid) 
			values 
				(#Name#, #Guid:Guid#);
		</insert><!--Guid for Oledb, UniqueIdentifier for SqlClient, Odbc -->
		
		<statement id="InsertCategoryViaParameterMap" parameterMap="InsertParam" resultClass="int">
			<selectKey property="Id" type="post" resultClass="int">
				select @@IDENTITY as [value];
            </selectKey>		
			insert into Categories  
				(Category_Name, Category_Guid)
			values 
				(?,?);
		</statement>
		
		<!-- Needs to be <insert> vs <statement> for Access due to selectKey -->	
		<insert id="InsertCategoryNull" parameterMap="insert-null-params" resultClass="int">
			<selectKey property="Id" type="post" resultClass="int">
				select @@IDENTITY as [value];
            </selectKey>			
			insert into Categories  
				(Category_Name, Category_Guid)
			values 
				(?,?);
		</insert>
				
		<update id="UpdateCategoryViaParameterMap" parameterMap="UpdateParam">
			update Categories set
			Category_Name =?,
			Category_Guid = ?
			where
			Category_Id = ?
		</update>
				
		<procedure id="InsertCategoryViaStoreProcedure" parameterMap="insert-params">
			sp_InsertCategorie
		</procedure>

		<insert id="InsertCategoryGenerate" parameterMap="insert-generate-params">
			<selectKey property="Id" type="post" resultClass="int">
				select @@IDENTITY as [value]
            </selectKey>
            <generate table="Categories" />
		</insert>
		
		<update id="UpdateCategoryGenerate" parameterMap="update-generate-params">
			<generate table="Categories" by="Category_Id"/>
		</update>
		
		<delete id="DeleteCategoryGenerate" parameterMap="delete-generate-params">
			<generate table="Categories" by="Category_Id, Category_Name"/>
		</delete>
		
		<select id="SelectByPKCategoryGenerate" resultClass="Category" parameterClass="Category" parameterMap="select-generate-params">
			<generate table="Categories" by="Category_Id"/> 
		</select>
		
		<select id="SelectAllCategoryGenerate" resultClass="Category" parameterMap="select-generate-params">
			<generate table="Categories" /> 
		</select>

		<statement id="DynamicGuid" 
			resultClass="Category" 
			parameterClass="Category">
			select
			Category_ID as [Id],
			Category_Name as [Name],
			Category_Guid as [Guid]
			from Categories  
			<dynamic prepend="where">
				<isNotEqual prepend="and" property="Guid" compareProperty="EmptyGuid">
					Category_Guid=#Guid:Guid#
				</isNotEqual>
			</dynamic>
		</statement>				
	</statements>
	
	<parameterMaps>
		<parameterMap id="insert-params">
			<parameter property="Id" column="Category_Id" dbType="Integer" /><!-- Int for SqlClient, Obdc; Integer for Oledb -->
			<parameter property="Name" column="Category_Name"/>
			<parameter property="Guid" column="Category_Guid" dbType="Guid"/><!--Guid for Oledb, UniqueIdentifier for SqlClient,Odbc -->
		</parameterMap>
		
		<parameterMap id="InsertParam">
			<parameter property="Name" column="Category_Name"/>
			<parameter property="Guid" column="Category_Guid" dbType="Guid"/><!--Guid for Oledb, UniqueIdentifier for SqlClient,Odbc -->
		</parameterMap>
		
		<parameterMap id="insert-null-params">
			<parameter property="Name" column="Category_Name"/>
			<parameter property="Guid" column="Category_Guid" nullValue="00000000-0000-0000-0000-000000000000" dbType="Guid"/><!--Guid for Oledb, UniqueIdentifier for SqlClient,Odbc -->
		</parameterMap>
				
		<parameterMap id="UpdateParam" extends="InsertParam">
			<parameter property="Id" column="Category_Id" />
		</parameterMap>

		<!-- Used by generated statement -->
		
		<parameterMap id="insert-generate-params">
			<parameter property="Name" column="Category_Name"/>
			<parameter property="Guid" column="Category_Guid" dbType="Guid"/><!--Guid for Oledb, UniqueIdentifier for SqlClient,Odbc -->
		</parameterMap>
		
		<parameterMap id="update-generate-params" extends="insert-generate-params">
			<parameter property="Id" column="Category_Id" />
		</parameterMap>
		
		<parameterMap id="delete-generate-params">
			<parameter property="Id" column="Category_Id" />
			<parameter property="Name" column="Category_Name"/>
		</parameterMap>
			
		<parameterMap id="selectByPK-generate-params">
			<parameter property="Id" column="Category_Id" />
		</parameterMap>
						
		<parameterMap id="select-generate-params">
			<parameter property="Id" column="Category_Id" />
			<parameter property="Name" column="Category_Name"/>
			<parameter property="Guid" column="Category_Guid" dbType="Guid"/>
		</parameterMap>
								
	</parameterMaps>
	
</sqlMap>
