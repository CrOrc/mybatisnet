<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IBatisNet.DataMapper</name>
    </assembly>
    <members>
        <member name="T:IBatisNet.DataMapper.Commands.DefaultPreparedCommand">
            <summary>
            Summary description for DefaultPreparedCommand.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.IPreparedCommand">
            <summary>
            Summary description for IPreparedCommand.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.IPreparedCommand.Create(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.Common.IDalSession,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.Object)">
            <summary>
            Create an IDbCommand for the IDalSession and the current SQL Statement
            and fill IDbCommand IDataParameter's with the parameterObject.
            </summary>
            <param name="request"></param>
            <param name="session">The IDalSession</param>
            <param name="statement">The IStatement</param>
            <param name="parameterObject">
            The parameter object that will fill the sql parameter
            </param>
            <returns>An IDbCommand with all the IDataParameter filled.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DefaultPreparedCommand.Create(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.Common.IDalSession,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.Object)">
            <summary>
            Create an IDbCommand for the IDalSession and the current SQL Statement
            and fill IDbCommand IDataParameter's with the parameterObject.
            </summary>
            <param name="request"></param>
            <param name="session">The IDalSession</param>
            <param name="statement">The IStatement</param>
            <param name="parameterObject">
            The parameter object that will fill the sql parameter
            </param>
            <returns>An IDbCommand with all the IDataParameter filled.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.DefaultPreparedCommand.ApplyParameterMap(IBatisNet.Common.IDalSession,System.Data.IDbCommand,IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="command"></param>
            <param name="request"></param>
            <param name="statement"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.EmbedParamsPreparedCommand">
            <summary>
            Summary description for EmbedParamsPreparedCommand.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.EmbedParamsPreparedCommand.ApplyParameterMap(IBatisNet.Common.IDalSession,System.Data.IDbCommand,IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="command"></param>
            <param name="request"></param>
            <param name="statement"></param>
            <param name="parameterObject"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.IPreparedCommandProxy">
            <summary>
            Summary description for IPreparedCommandProxy.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.IPreparedCommandProxy.#ctor(IBatisNet.DataMapper.Commands.IPreparedCommand)">
            <summary>
            Constructor for a connection proxy
            </summary>
            <param name="preparedCommand">The connection which been proxified.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.IPreparedCommandProxy.NewInstance(IBatisNet.DataMapper.Commands.IPreparedCommand)">
            <summary>
            Static constructor
            </summary>
            <param name="preparedCommand">The connection which been proxified.</param>
            <returns>A proxy</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.IPreparedCommandProxy.Intercept(Castle.DynamicProxy.IInvocation,System.Object[])">
            <summary>
            
            </summary>
            <param name="invocation"></param>
            <param name="arguments"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Commands.PreparedCommandFactory">
            <summary>
            Summary description for PreparedCommandFactory.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Commands.PreparedCommandFactory.GetPreparedCommand(System.Boolean)">
            <summary>
            Get an IPreparedCommand.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Alias.TypeAlias">
            <summary>
            TypeAlias.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="type">a type.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.Initialize">
            <summary>
            Initialize the object, 
            try to idenfify the .Net type class from the corresponding name.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.Name">
            <summary>
            Name used to identify the typeAlias amongst the others.
            </summary>
            <example> Account</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.Class">
            <summary>
            The type class for the typeAlias
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeAlias.ClassName">
            <summary>
            The class name to identify the typeAlias.
            </summary>
            <example>Com.Site.Domain.Product</example>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Alias.TypeHandler">
            <summary>
            Summary description for TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.Initialize">
            <summary>
            Initialize the object, 
            try to idenfify the .Net type class from the corresponding name.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.ClassName">
            <summary>
            CLR type
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.Class">
            <summary>
            The type class for the TypeName
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.DbType">
            <summary>
            dbType name
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Alias.TypeHandler.CallBackName">
            <summary>
            callback alias name
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController">
            <summary>
            Summary description for FifoCacheController.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.ICacheController">
            <summary>
            Summary description for ICacheController.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.ICacheController.Flush">
            <summary>
            Clears all elements from the cache.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.ICacheController.Configure(System.Collections.Specialized.HybridDictionary)">
            <summary>
            Configures the CacheController
            </summary>
            <param name="properties"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.ICacheController.Item(System.Object)">
            <summary>
            Adds an item with the specified key and value into cached data.
            Gets a cached object with the specified key.
            </summary>
            <value>The cached object or <c>null</c></value>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController.Flush">
            <summary>
            Clears all elements from the cache.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController.Configure(System.Collections.Specialized.HybridDictionary)">
            <summary>
            Configures the cache
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.Fifo.FifoCacheController.Item(System.Object)">
            <summary>
            Adds an item with the specified key and value into cached data.
            Gets a cached object with the specified key.
            </summary>
            <value>The cached object or <c>null</c></value>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController">
            <summary>
            Summary description for LruCacheController.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController.Flush">
            <summary>
            Clears all elements from the cache.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController.Configure(System.Collections.Specialized.HybridDictionary)">
            <summary>
            Configures the cache
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.Lru.LruCacheController.Item(System.Object)">
            <summary>
            Adds an item with the specified key and value into cached data.
            Gets a cached object with the specified key.
            </summary>
            <value>The cached object or <c>null</c></value>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler">
            <summary>
            Summary description for MemoryCacheControler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.Flush">
            <summary>
            Clears all elements from the cache.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.Configure(System.Collections.Specialized.HybridDictionary)">
            <summary>
            Configures the cache
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.Item(System.Object)">
            <summary>
            Adds an item with the specified key and value into cached data.
            Gets a cached object with the specified key.
            </summary>
            <value>The cached object or <c>null</c></value>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.StrongReference">
            <summary>
            Class to implement a strong (permanent) reference.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheControler.StrongReference.Target">
            <summary>
            Gets the object (the target) referenced by this instance.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel">
            <summary>
            Summary description for MemoryCacheLevel.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.Weak">
            <summary>
            Constant for weak caching
            This cache model is probably the best choice in most cases. It will increase
            performance for popular results, but it will absolutely release the memory to
            be used in allocating other objects, assuming that the results are not currently
            in use.
            References an object while still allowing it to be garbage collected.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.Strong">
            <summary>
            Constant for strong caching.
            This cache model will guarantee that the results stay in memory until the cache 
            is explicitly flushed. This is ideal for results that are:
            <list>
            <item>very small</item>
            <item>absolutely static</item>
            <item>used very often</item>
            </list>
            The advantage is that performance will be very good for this particular query.
            The disadvantage is that if the memory used by these results is needed, then it
            will not be released to make room for other objects (possibly more important
            objects).
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.#ctor(System.String)">
            <summary>
            Creates a new instance of CacheLevel
            </summary>
            <param name="type">The type of the CacheLevel.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.GetByRefenceType(System.String)">
            <summary>
            
            </summary>
            <param name="referenceType"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.Memory.MemoryCacheLevel.ReferenceType">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.CacheModel">
            <summary>
            Summary description for CacheModel.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Cache.CacheModel.NO_FLUSH_INTERVAL">
            <summary>
            Constant to turn off periodic cache flushes
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.RegisterTriggerStatement(IBatisNet.DataMapper.MappedStatements.MappedStatement)">
            <summary>
            Event listener
            </summary>
            <param name="mappedStatement">A MappedStatement on which we listen ExecuteEventArgs event.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.FlushHandler(System.Object,IBatisNet.DataMapper.ExecuteEventArgs)">
            <summary>
            FlushHandler which clear the cache 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.Flush">
            <summary>
            Clears all elements from the cache.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.CacheModel.AddProperty(System.String,System.String)">
            <summary>
            Add a property
            </summary>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.Id">
            <summary>
            Identifier used to identify the CacheModel amongst the others.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.Implementation">
            <summary>
            Cache controller implementation name.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.FlushInterval">
            <summary>
            Set or get the flushInterval (in Ticks)
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.Item(System.Object)">
            <summary>
            Adds an item with the specified key and value into cached data.
            Gets a cached object with the specified key.
            </summary>
            <value>The cached object or <c>null</c></value>
            <remarks>
            A side effect of this method is that is may clear the cache
            if it has not been cleared in the flushInterval.
            </remarks> 
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.CacheModel.HitRatio">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Cache.FlushInterval">
            <summary>
            Summary description for FlushInterval.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Initialize">
            <summary>
            Calcul the flush interval value in ticks
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Hours">
            <summary>
            Flush interval in hours
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Minutes">
            <summary>
            Flush interval in minutes
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Seconds">
            <summary>
            Flush interval in seconds
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Milliseconds">
            <summary>
            Flush interval in milliseconds
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Cache.FlushInterval.Interval">
            <summary>
            Get the flush interval value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser">
            <summary>
            Summary description for InlineParameterMapParser.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser.#ctor(IBatisNet.DataMapper.Scope.ErrorContext)">
            <summary>
            Constructor
            </summary>
            <param name="errorContext"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser.ParseInlineParameterMap(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.String)">
            <summary>
            Parse Inline ParameterMap
            </summary>
            <param name="statement"></param>
            <param name="sqlStatement"></param>
            <returns>A new sql command text.</returns>
            <param name="typeHandlerFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser.NewParseMapping(System.String,System.Type,IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory)">
            <summary>
            Parse inline parameter with syntax as
            #propertyName,type=string,dbype=Varchar,direction=Input,nullValue=N/A,handler=string#
            </summary>
            <param name="token"></param>
            <param name="parameterClassType"></param>
            <param name="typeHandlerFactory"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser.OldParseMapping(System.String,System.Type,IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory)">
            <summary>
            Parse inline parameter with syntax as
            #propertyName:dbType:nullValue#
            </summary>
            <param name="token"></param>
            <param name="parameterClass"></param>
            <param name="typeHandlerFactory"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.InlineParameterMapParser.ResolveTypeHandler(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory,System.Type,System.String,System.String,System.String)">
            <summary>
            Resolve TypeHandler
            </summary>
            <param name="paremeterClassType"></param>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="dbType"></param>
            <param name="typeHandlerFactory"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap">
            <summary>
            Summary description for ParameterMap.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.#ctor(System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="usePositionalParameters"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.GetProperty(System.Int32)">
            <summary>
            Get the ParameterProperty at index.
            </summary>
            <param name="index">Index</param>
            <returns>A ParameterProperty</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.GetProperty(System.String)">
            <summary>
            Get a ParameterProperty by his name.
            </summary>
            <param name="name">The name of the ParameterProperty</param>
            <returns>A ParameterProperty</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.AddParameterProperty(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty)">
            <summary>
            Add a ParameterProperty to the ParameterProperty list.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.InsertParameterProperty(System.Int32,IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty)">
            <summary>
            Insert a ParameterProperty ine the ParameterProperty list at the specified index..
            </summary>
            <param name="index">
            The zero-based index at which ParameterProperty should be inserted. 
            </param>
            <param name="property">The ParameterProperty to insert. </param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.GetParameterIndex(System.String)">
            <summary>
            Retrieve the index for array property
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.GetPropertyNameArray">
            <summary>
            Get all Parameter Property Name 
            </summary>
            <returns>A string array</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.SetParameter(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty,System.Data.IDataParameter,System.Object)">
            <summary>
            Set parameter value, replace the null value if any.
            </summary>
            <param name="mapping"></param>
            <param name="dataParameter"></param>
            <param name="parameterValue"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Initialize the parameter properties child.
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.GetProperties(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
             Get the parameter properties child for the xmlNode parameter.
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.Id">
            <summary>
            Identifier used to identify the ParameterMap amongst the others.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.Properties">
            <summary>
            The collection of ParameterProperty
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.PropertiesList">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap.ExtendMap">
            <summary>
            Extend Parametermap attribute
            </summary>
            <remarks>The id of a ParameterMap</remarks>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty">
            <summary>
            Summary description for ParameterProperty.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Initialize(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory,IBatisNet.DataMapper.Scope.ErrorContext)">
            <summary>
            
            </summary>
            <param name="errorContext"></param>
            <param name="typeHandlerFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.CallBackName">
            <summary>
            Specify the custom type handlers to used.
            </summary>
            <remarks>Will be an alias to a class wchic implement ITypeHandlerCallback</remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.CLRType">
            <summary>
            Specify the CLR type of the parameter.
            </summary>
            <remarks>
            The type attribute is used to explicitly specify the property type to be read.
            Normally this can be derived from a property through reflection, but certain mappings such as
            HashTable cannot provide the type to the framework.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.TypeHandler">
            <summary>
            The typeHandler used to work with the parameter.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.ColumnName">
            <summary>
            Column Name for output parameter 
            in store proccedure.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Size">
            <summary>
            Column size.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Scale">
            <summary>
            Column Scale.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Precision">
            <summary>
            Column Precision.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.DbType">
            <summary>
            Give an entry in the 'DbType' enumeration
            </summary>
            <example >
            For Sql Server, give an entry of SqlDbType : Bit, Decimal, Money...
            <br/>
            For Oracle, give an OracleType Enumeration : Byte, Int16, Number...
            </example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.DirectionAttribute">
            <summary>
            The direction attribute of the XML parameter.
            </summary>
            <example> Input, Output, InputOutput</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.Direction">
            <summary>
            Indicate the direction of the parameter.
            </summary>
            <example> Input, Output, InputOutput</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.PropertyName">
            <summary>
            Property name used to identify the property amongst the others.
            </summary>
            <example>EmailAddress</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.HasNullValue">
            <summary>
            Tell if a nullValue is defined.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty.NullValue">
            <summary>
            Null value replacement.
            </summary>
            <example>"no_email@provided.com"</example>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator">
            <summary>
            Summary description for Discriminator.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator._resultMaps">
            <summary>
            (discriminatorValue (string), ResultMap)
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator._subMaps">
            <summary>
            The subMaps name who used this discriminator
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.SetMapping(IBatisNet.DataMapper.Scope.ConfigurationScope,System.Type)">
            <summary>
            Initilaize the underlying mapping
            </summary>
            <param name="configScope"></param>
            <param name="resultClass"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Initialize the Discriminator
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.Add(IBatisNet.DataMapper.Configuration.ResultMapping.SubMap)">
            <summary>
            Add a subMap that the discrimator must treat
            </summary>
            <param name="subMap">A subMap</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.GetSubMap(System.String)">
            <summary>
            Find the SubMap to use.
            </summary>
            <param name="discriminatorValue">the discriminator value</param>
            <returns>The find ResultMap</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.CallBackName">
            <summary>
            Specify the custom type handlers to used.
            </summary>
            <remarks>Will be an alias to a class wchic implement ITypeHandlerCallback</remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.DbType">
            <summary>
            Give an entry in the 'DbType' enumeration
            </summary>
            <example >
            For Sql Server, give an entry of SqlDbType : Bit, Decimal, Money...
            <br/>
            For Oracle, give an OracleType Enumeration : Byte, Int16, Number...
            </example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.CLRType">
            <summary>
            Specify the CLR type of the result.
            </summary>
            <remarks>
            The type attribute is used to explicitly specify the property type of the property to be set.
            Normally this can be derived from a property through reflection, but certain mappings such as
            HashTable cannot provide the type to the framework.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.ColumnIndex">
            <summary>
            Column Index
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.ColumnName">
            <summary>
            Column Name
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.NullValue">
            <summary>
            Null value replacement.
            </summary>
            <example>"no_email@provided.com"</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.Discriminator.ResultProperty">
            <summary>
            Th underlying ResultProperty
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap">
            <summary>
            Summary description for ResultMap.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Initialize the resultMap from an xmlNode..
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.GetChildNode(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Get the result properties and the subMap properties.
            </summary>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.CreateInstanceOfResult">
            <summary>
            Create an instance Of result.
            </summary>
            <returns>An object.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.AddResultPropery(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty)">
            <summary>
            Add a ResultProperty to the list of ResultProperty.
            </summary>
            <param name="property">The property to add.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.SetValueOfProperty(System.Object@,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object)">
            <summary>
            Set the value of an object property.
            </summary>
            <param name="target">The object to set the property.</param>
            <param name="property">The result property to use.</param>
            <param name="dataBaseValue">The database value to set.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.ResolveSubMap(System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.SqlMapNameSpace">
            <summary>
            The sqlMap namespace
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.Discriminator">
            <summary>
            The discriminator used to choose the good SubMap
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.ColumnsToPropertiesMap">
            <summary>
            The collection of result properties.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.Id">
            <summary>
            Identifier used to identify the resultMap amongst the others.
            </summary>
            <example>GetProduct</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.ExtendMap">
            <summary>
            Extend ResultMap attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.Class">
            <summary>
            The output type class of the resultMap.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap.ClassName">
            <summary>
            The output class name of the resultMap.
            </summary>
            <example>Com.Site.Domain.Product</example>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty">
            <summary>
            Summary description for ResultProperty.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.UNKNOWN_COLUMN_INDEX">
            <summary>
            
            </summary>		
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope,System.Type)">
            <summary>
            Initialize the PropertyInfo of the result property.
            </summary>
            <param name="resultClass"></param>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.Initialize(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory,System.Reflection.PropertyInfo)">
            <summary>
            Initialize the PropertyInfo of the result property
            for AutoMapper
            </summary>
            <param name="propertyInfo">A PropertyInfoot.</param>
            <param name="typeHandlerFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.GetDataBaseValue(System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.CallBackName">
            <summary>
            Specify the custom type handlers to used.
            </summary>
            <remarks>Will be an alias to a class wchic implement ITypeHandlerCallback</remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.IsLazyLoad">
            <summary>
            Tell us if we must lazy load this property..
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.TypeHandler">
            <summary>
            The typeHandler used to work with the result property.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.DbType">
            <summary>
            Give an entry in the 'DbType' enumeration
            </summary>
            <example >
            For Sql Server, give an entry of SqlDbType : Bit, Decimal, Money...
            <br/>
            For Oracle, give an OracleType Enumeration : Byte, Int16, Number...
            </example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.CLRType">
            <summary>
            Specify the CLR type of the result.
            </summary>
            <remarks>
            The type attribute is used to explicitly specify the property type of the property to be set.
            Normally this can be derived from a property through reflection, but certain mappings such as
            HashTable cannot provide the type to the framework.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.ColumnIndex">
            <summary>
            Column Index
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.Select">
            <summary>
            The name of the statement to retrieve the property
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.NestedResultMapName">
            <summary>
            The name of a nested ResultMap to set the property
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.ColumnName">
            <summary>
            Column Name
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.PropertyName">
            <summary>
            The property name used to identify the property amongst the others.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.PropertyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.HasNullValue">
            <summary>
            Tell if a nullValue is defined.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.NullValue">
            <summary>
            Null value replacement.
            </summary>
            <example>"no_email@provided.com"</example>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty.NestedResultMap">
            <summary>
            A nested ResultMap use to set a property
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.ResultMapping.SubMap">
            <summary>
            Summary description for SubMap.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.ResultMapping.SubMap.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.SubMap.DiscriminatorValue">
            <summary>
            Discriminator value
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.SubMap.ResultMapName">
            <summary>
            The name of the ResultMap used if the column value is = to the Discriminator Value
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.ResultMapping.SubMap.ResultMap">
            <summary>
            The resultMap used if the column value is = to the Discriminator Value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.BaseTag">
            <summary>
            Summary description for BaseTag.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag">
            <summary>
            SqlTag is a children element of dynamic Sql element.
            SqlTag represent any binary unary/conditional element (like isEmpty, isNull, iEquall...) 
            or other element as isParameterPresent, isNotParameterPresent, iterate.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.ISqlChild">
            <summary>
            Summary description for ISqlChild.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IDynamicParent">
            <summary>
            Summary description for DynamicParent.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IDynamicParent.AddChild(IBatisNet.DataMapper.Configuration.Sql.Dynamic.ISqlChild)">
            <summary>
            
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.GetChildrenEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.AddChild(IBatisNet.DataMapper.Configuration.Sql.Dynamic.ISqlChild)">
            <summary>
            
            </summary>
            <param name="child"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.Parent">
            <summary>
            Parent tag element
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.Prepend">
            <summary>
            Prepend attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.Handler">
            <summary>
            Handler for this sql tag
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag.IsPrependAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.BaseTag.Property">
            <summary>
            Property attribute
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Conditional">
            <summary>
            Summary description for Conditional.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Conditional.CompareProperty">
            <summary>
            CompareProperty attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Conditional.CompareValue">
            <summary>
            CompareValue attribute
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Dynamic">
            <summary>
            Summary description for DynamicTag.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Dynamic.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsEmpty">
            <summary>
            Represent an isEmpty sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsEmpty.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsEqual">
            <summary>
            Represent an isEqual sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsEqual.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsGreaterEqual">
            <summary>
            Represent an isGreaterEqual sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsGreaterEqual.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsGreaterThan">
            <summary>
            Represent an isGreaterThan sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsGreaterThan.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsLessEqual">
            <summary>
            Represent an isLessEqual sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsLessEqual.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsLessThan">
            <summary>
            Represent an isLessThan sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsLessThan.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotEmpty">
            <summary>
            Represent an isNotEmpty sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotEmpty.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotEqual">
            <summary>
            Represent an isNotEqual sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotEqual.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotNull">
            <summary>
            Represent an isNotNull sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotNull.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotParameterPresent">
            <summary>
            Represent an isNotParameterPresent sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotParameterPresent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotPropertyAvailable">
            <summary>
            Represent an isEmpty sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNotPropertyAvailable.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNull">
            <summary>
            Represent an isNull sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsNull.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsParameterPresent">
            <summary>
            Represent an isParameterPresent sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsParameterPresent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsPropertyAvailable">
            <summary>
            Represent an isPropertyAvailable sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IsPropertyAvailable.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate">
            <summary>
            Represent an iterate sql tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate.Conjunction">
            <summary>
            Conjonction attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate.Close">
            <summary>
            Close attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.Iterate.Open">
            <summary>
            Open attribute
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler">
            <summary>
            Description résumée de BaseTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ISqlTagHandler">
            <summary>
            Summary description for ISqlTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ISqlTagHandler.DoStartFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ISqlTagHandler.DoEndFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ISqlTagHandler.DoPrepend(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ISqlTagHandler.IsPostParseRequired">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.SKIP_BODY">
            <summary>
            BODY TAG
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.INCLUDE_BODY">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.REPEAT_BODY">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.DoStartFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.DoEndFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.DoPrepend(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.BaseTagHandler.IsPostParseRequired">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler">
            <summary>
            Description résumée de ConditionalTagHandler.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.NOT_COMPARABLE">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.DoStartFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.DoEndFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.Compare(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="sqlTag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.CompareValues(System.Type,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.ConditionalTagHandler.ConvertValue(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.DynamicTagHandler">
            <summary>
            Summary description for DynamicTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.DynamicTagHandler.DoStartFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEmptyTagHandler">
            <summary>
            IsEmptyTagHandler represent a isEmpty tag element in a dynamic mapped statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEmptyTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEqualTagHandler">
            <summary>
            Summary description for IsEqualTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsEqualTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterEqualTagHandler">
            <summary>
            Summary description for IsGreaterEqualTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterEqualTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterThanTagHandler">
            <summary>
            Summary description for IsGreaterThanTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsGreaterThanTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessEqualTagHandler">
            <summary>
            Summary description for IsLessEqualTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessEqualTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessThanTagHandler">
            <summary>
            Summary description for IsLessThanTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsLessThanTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEmptyTagHandler">
            <summary>
            Summary description for IsNotEmptyTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEmptyTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEqualTagHandler">
            <summary>
            Summary description for IsNotEqualTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotEqualTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotNullTagHandler">
            <summary>
            Summary description for IsNotNullTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNullTagHandler">
            <summary>
            Summary description for IsNullTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNullTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotNullTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotParameterPresentTagHandler">
            <summary>
            Summary description for IsNotParameterPresentTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsParameterPresentTagHandler">
            <summary>
            Summary description for IsParameterPresentTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsParameterPresentTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotParameterPresentTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotPropertyAvailableTagHandler">
            <summary>
            Summary description for IsNotPropertyAvailableTagHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsPropertyAvailableTagHandler">
            <summary>
            Summary description for IsPropertyAvailableTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsPropertyAvailableTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IsNotPropertyAvailableTagHandler.IsCondition(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext">
            <summary>
            Summary description for IterateContext.
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dncscol/html/csharp01212002.asp
            http://www.microsoft.com/mspress/books/sampchap/6173.asp
            http://www.dur.ac.uk/barry.cornelius/java/a.taste.of.csharp/onefile/
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.Reset">
            <summary>
            Sets the enumerator to its initial position,
             which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.MoveNext">
             <summary>
             Advances the enumerator to the next element of the collection.
             </summary>
             <returns>
             True if the enumerator was successfully advanced to the next element;
             False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.Remove">
            <summary>
            Removes from the underlying collection the last element returned by the iterator. 
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.Index">
            <summary>
            Gets the index of the current element in the collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.IsFirst">
            <summary>
            Return true if the current element is the first.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.IsLast">
            <summary>
             Return true if the current element is the last.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateContext.HasNext">
            <summary>
            Returns true if the iteration has more elements. (In other words, returns true 
            if next would return an element rather than throwing an exception.) 
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler">
            <summary>
            Summary description for IterateTagHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.DoStartFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.DoPrepend(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.DoEndFragment(IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.SqlTag,System.Object,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="tag"></param>
            <param name="parameterObject"></param>
            <param name="bodyContent"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.Replace(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="find"></param>
            <param name="replace"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.IterateTagHandler.IsPostParseRequired">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext">
            <summary>
            Summary description for SqlTagContext.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.GetWriter">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.AddAttribute(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.GetAttribute(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.AddParameterMapping(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterProperty)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.GetParameterMappings">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.BodyText">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.IsOverridePrepend">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext.FirstNonDynamicTagWithPrepend">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql">
            <summary>
            DynamicSql represent the root element of a dynamic sql statement
            </summary>
            <example>
                 <dynamic prepend="where">...</dynamic>
            </example>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.ISql">
            <summary>
            Summary description for ISql.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.ISql.GetRequestScope(System.Object,IBatisNet.Common.IDalSession)">
            <summary>
            Get the RequestScope for this request.
            </summary>
            <param name="parameterObject">
            The parameter object (used by DynamicSql/SimpleDynamicSql).
            Use to complete the sql statement.
            </param>
            <param name="session"></param>
            <returns>The RequestScope.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.#ctor(IBatisNet.DataMapper.Scope.ConfigurationScope,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="statement">The mapped statement.</param>
            <param name="configScope"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.AddChild(IBatisNet.DataMapper.Configuration.Sql.Dynamic.ISqlChild)">
            <summary>
            
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.GetRequestScope(System.Object,IBatisNet.Common.IDalSession)">
            <summary>
            
            </summary>
            <param name="parameterObject"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.Process(IBatisNet.DataMapper.Scope.RequestScope,System.Object)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.ProcessBodyChildren(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,System.Object,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="ctx"></param>
            <param name="parameterObject"></param>
            <param name="localChildren"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.ProcessBodyChildren(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Handlers.SqlTagContext,System.Object,System.Collections.IEnumerator,System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="ctx"></param>
            <param name="parameterObject"></param>
            <param name="localChildren"></param>
            <param name="buffer"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Dynamic.DynamicSql.BuildPreparedStatement(IBatisNet.Common.IDalSession,IBatisNet.DataMapper.Scope.RequestScope,System.String)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="request"></param>
            <param name="sqlStatement"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Dynamic.SqlText">
            <summary>
            Summary description for SqlText.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.SqlText.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.SqlText.IsWhiteSpace">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Sql.Dynamic.SqlText.Parameters">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql">
            <summary>
            Summary description for SimpleDynamicSql.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.#ctor(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory,System.String,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlStatement">The sql statement.</param>
            <param name="statement"></param>
            <param name="typeHandlerFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.GetSql(System.Object)">
            <summary>
            
            </summary>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.IsSimpleDynamicSql(System.String)">
            <summary>
            
            </summary>
            <param name="sqlStatement"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.ProcessDynamicElements(System.Object)">
            <summary>
            
            </summary>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.GetRequestScope(System.Object,IBatisNet.Common.IDalSession)">
            <summary>
            
            </summary>
            <param name="parameterObject"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.SimpleDynamic.SimpleDynamicSql.BuildPreparedStatement(IBatisNet.Common.IDalSession,IBatisNet.DataMapper.Scope.RequestScope,System.String)">
            <summary>
            Build the PreparedStatement
            </summary>
            <param name="session"></param>
            <param name="request"></param>
            <param name="sqlStatement"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Static.ProcedureSql">
            <summary>
            Summary description for ProcedureSql.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.ProcedureSql.#ctor(System.String,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="statement">The statement.</param>
            <param name="sqlStatement"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.ProcedureSql.GetRequestScope(System.Object,IBatisNet.Common.IDalSession)">
            <summary>
            
            </summary>
            <param name="parameterObject"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.ProcedureSql.BuildPreparedStatement(IBatisNet.Common.IDalSession,IBatisNet.DataMapper.Scope.RequestScope,System.String)">
            <summary>
            Build the PreparedStatement
            </summary>
            <param name="session"></param>
            <param name="commandText"></param>
            <param name="request"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Sql.Static.StaticSql">
            <summary>
            Summary description for StaticSql.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.StaticSql.#ctor(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="statement">The statement.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.StaticSql.GetRequestScope(System.Object,IBatisNet.Common.IDalSession)">
            <summary>
            Get the sql command text to execute.
            </summary>
            <param name="parameterObject">The parameter object (used in DynamicSql)</param>
            <param name="session"></param>
            <returns>The sql command text.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Sql.Static.StaticSql.BuildPreparedStatement(IBatisNet.Common.IDalSession,System.String)">
            <summary>
            Build the PreparedStatement
            </summary>
            <param name="session"></param>
            <param name="sqlStatement"></param>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Delete">
            <summary>
            Summary description for delete.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Statement">
            <summary>
            Summary description for Statement.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.IStatement">
            <summary>
            Summary description for ISql.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.IStatement.CreateInstanceOfResultClass">
            <summary>
            Create an instance of result class.
            </summary>
            <returns>An object.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.IStatement.CreateInstanceOfListClass">
            <summary>
            Create an instance of 'IList' class.
            </summary>
            <returns>An object which implment IList.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.Id">
            <summary>
            Identifier used to identify the statement amongst the others.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.CommandType">
            <summary>
            The type of the statement (text or procedure).
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ExtendSatement">
            <summary>
            Extend statement attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.Sql">
            <summary>
            The sql statement to execute.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ResultMap">
            <summary>
            The ResultMap used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ParameterMap">
            <summary>
            The parameterMap used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.CacheModel">
            <summary>
            The CacheModel used by this statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.CacheModelName">
            <summary>
            The CacheModel name to use.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ListClass">
            <summary>
            The list class type to use for strongly typed collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ResultClass">
            <summary>
            The result class type to used.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.IStatement.ParameterClass">
            <summary>
            The parameter class type to used.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Statement.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Statement.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            Initialize an statement for the sqlMap.
            </summary>
            <param name="configurationScope">The scope of the configuration</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Statement.CreateInstanceOfResultClass">
            <summary>
            Create an instance of result class.
            </summary>
            <returns>An object.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Statement.CreateInstanceOfListClass">
            <summary>
            Create an instance of 'IList' class.
            </summary>
            <returns>An object which implment IList.</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ExtendSatement">
            <summary>
            Extend statement attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.CacheModelName">
            <summary>
            The CacheModel name to use.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.HasCacheModel">
            <summary>
            Tell us if a cacheModel is attached to this statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.CacheModel">
            <summary>
            The CacheModel used by this statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ListClassName">
            <summary>
            The list class name to use for strongly typed collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ListClass">
            <summary>
            The list class type to use for strongly typed collection.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ResultClassName">
            <summary>
            The result class name to used.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ResultClass">
            <summary>
            The result class type to used.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ParameterClassName">
            <summary>
            The parameter class name to used.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ParameterClass">
            <summary>
            The parameter class type to used.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.Id">
            <summary>
            Name used to identify the statement amongst the others.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.Sql">
            <summary>
            The sql statement
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ResultMapName">
            <summary>
            The ResultMap name used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ParameterMapName">
            <summary>
            The ParameterMap name used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ResultMap">
            <summary>
            The ResultMap used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.ParameterMap">
            <summary>
            The parameterMap used by the statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Statement.CommandType">
            <summary>
            The type of the statement (text or procedure)
            Default Text.
            </summary>
            <example>Text or StoredProcedure</example>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Delete.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Delete.Generate">
            <summary>
            The Generate tag used by a generated delete statement.
            (CRUD operation)
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Generate">
            <summary>
            Represent a generate tag element.
            The generation would happen at the point where the 
            SqlMapClient instance is built.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Generate.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Generate.Table">
            <summary>
            The table name used to build the SQL query. 
            </summary>
            <remarks>
            Will be used to get the metadata to build the SQL if needed.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Generate.By">
            <summary>
            The by attribute is used to generate the where clause.
            </summary>
            <remarks>The by="" attribute can support multiple colums.</remarks>
            <example> 
            	&lt; delete ...&gt;
            		&lt;generate table="EMPLOYEE" by="EMPLOYEE_ID, LAST_MOD_DATE" /&gt;
            	&lt;/delete&gt;
            </example>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Insert">
            <summary>
            Represent an insert statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Insert.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Insert.ExtendSatement">
            <summary>
            Extend statement attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Insert.SelectKey">
            <summary>
            The selectKey statement used by an insert statement.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Insert.Generate">
            <summary>
            The Generate tag used by a generated insert statement.
            (CRUD operation)
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.PreparedStatement">
            <summary>
            Construct the list of IDataParameters for the statement
            and prepare the sql
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.PreparedStatement.DbParametersName">
            <summary>
            The list of IDataParameter name used by the PreparedSql.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.PreparedStatement.DbParameters">
            <summary>
            The list of IDataParameter to use for the PreparedSql.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.PreparedStatement.PreparedSql">
            <summary>
            The prepared statement.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory">
            <summary>
            Summary description for PreparedStatementFactory.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.#ctor(IBatisNet.Common.IDalSession,IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.Statements.IStatement,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="session"></param>
            <param name="statement"></param>
            <param name="commandText"></param>
            <param name="request"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.Prepare">
            <summary>
            Create a list of IDataParameter for the statement and build the sql string.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.DiscoverParameter(IBatisNet.Common.IDalSession)">
            <summary>
            For store procedure, auto discover IDataParameters for stored procedures at run-time.
            </summary>
            <param name="session">The current session.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.CreateParametersForTextCommand">
            <summary>
            Create IDataParameters for command text statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.CreateParametersForProcedureCommand">
            <summary>
            Create IDataParameters for procedure statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory.EvaluateParameterMap">
            <summary>
            Parse sql command text.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Procedure">
            <summary>
            Represent a store Procedure.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Procedure.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Procedure.Initialize(IBatisNet.DataMapper.Scope.ConfigurationScope)">
            <summary>
            
            </summary>
            <param name="configurationScope">The scope of the configuration</param>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Procedure.CommandType">
            <summary>
            The type of the statement StoredProcedure.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Procedure.ExtendSatement">
            <summary>
            Extend statement attribute
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Select">
            <summary>
            Summary description for Select.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Select.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Select.Generate">
            <summary>
            The Generate tag used by a generated select statement.
            (CRUD operation)
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.SelectKey">
            <summary>
            Represent a SelectKey tag element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SelectKey.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.SelectKey.ExtendSatement">
            <summary>
            Extend statement attribute
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.SelectKey.PropertyName">
            <summary>
            The property name object to fill with the key.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.SelectKey.SelectKeyType">
            <summary>
            The type of the selectKey tag : 'Pre' or 'Post'
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.SelectKey.isAfter">
            <summary>
            True if it is a post-generated key.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator">
            <summary>
            Summary description for SqlGenerator.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator.BuildQuery(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Creates SQL command text for a specified statement
            </summary>
            <param name="statement">The statement to build the SQL command text.</param>
            <returns>The SQL command text for the statement.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator.BuildSelectQuery(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Creates an select SQL command text for a specified statement
            </summary>
            <param name="statement">The statement to build the SQL command text.</param>
            <returns>The SQL command text for the statement.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator.BuildInsertQuery(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Creates an insert SQL command text for a specified statement
            </summary>
            <param name="statement">The statement to build the SQL command text.</param>
            <returns>The SQL command text for the statement.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator.BuildUpdateQuery(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Creates an update SQL command text for a specified statement
            </summary>
            <param name="statement">The statement to build the SQL command text.</param>
            <returns>The SQL command text for the statement.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.SqlGenerator.BuildDeleteQuery(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Creates an delete SQL command text for a specified statement
            </summary>
            <param name="statement">The statement to build the SQL command text.</param>
            <returns>The SQL command text for the statement.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.Statements.Update">
            <summary>
            Summary description for Update.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.Statements.Update.#ctor">
            <summary>
            Do not use direclty, only for serialization.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Configuration.Statements.Update.Generate">
            <summary>
            The Generate tag used by a generated update statement.
            (CRUD operation)
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder">
            <summary>
            Builds SqlMapper instances from a supplied resource (e.g. XML configuration file)
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.DEFAULT_FILE_CONFIG_NAME">
            <summary>
            Default congig name
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.DEFAULT_PROVIDER_NAME">
            <summary>
            Default provider name
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.DOT">
            <summary>
            Dot representation
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_CONFIG_ROOT">
            <summary>
            Token for SqlMapConfig xml root.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_CONFIG_SETTINGS">
            <summary>
            Token for xml path to SqlMapConfig settings element.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.PROVIDERS_FILE_NAME">
            <summary>
            Token for providers config file name.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ATR_USE_STATEMENT_NAMESPACES">
            <summary>
            Token for useStatementNamespaces attribute.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ATR_CACHE_MODELS_ENABLED">
            <summary>
            Token for cacheModelsEnabled attribute.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ATR_VALIDATE_SQLMAP">
            <summary>
            Token for validateSqlMap attribute.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ATR_VALIDATE_SQLMAP_CONFIG">
            <summary>
            Token for validateSqlMapConfig attribute.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ATR_EMBED_STATEMENT_PARAMS">
            <summary>
            Token for embedStatementParams attribute.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.XML_CONFIG_PROVIDERS">
            <summary>
            Token for xml path to SqlMapConfig providers element.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.#ctor(System.Boolean)">
            <summary>
            Constructs a DomSqlMapBuilder 
            with or without configuration document validation using the 
            SqlMapConfig schema.
            </summary>
            <param name="validateSqlMapConfig">
            Specify whether the configuration Xml document should be 
            validated with the SqlMapConfig schema.
            </param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure">
            <summary>
            Configure a SqlMapper from default resource file named SqlMap.config.
            </summary>
            <returns>An SqlMap</returns>
            <remarks>The file path is relative to the application root.</remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure(System.Xml.XmlDocument)">
            <summary>
            Configure an SqlMap.
            </summary>
            <param name="document">An xml sql map configuration document.</param>
            <returns>the SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure(System.String)">
            <summary>
            Configure a SqlMapper from a file path.
            </summary>
            <param name="resource">
            A relative ressource path from your Application root 
            or a absolue file path file:\\c:\dir\a.config
            </param>
            <returns>An SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure(System.IO.Stream)">
            <summary>
             Configure a SqlMapper from a stream.
            </summary>
            <param name="resource">A stream resource</param>
            <returns>An SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure(System.IO.FileInfo)">
            <summary>
             Configure a SqlMapper from a FileInfo.
            </summary>
            <param name="resource">A FileInfo resource</param>
            <returns>An SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Configure(System.Uri)">
            <summary>
             Configure a SqlMapper from an Uri.
            </summary>
            <param name="resource">A Uri resource</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ConfigureAndWatch(IBatisNet.Common.Utilities.ConfigureHandler)">
            <summary>
            Configure and monitor the default configuration file for modifications 
            and automatically reconfigure SqlMap. 
            </summary>
            <returns>An SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ConfigureAndWatch(System.String,IBatisNet.Common.Utilities.ConfigureHandler)">
             <summary>
             Configure and monitor the configuration file for modifications 
             and automatically reconfigure SqlMap. 
             </summary>
             <param name="resource">
             A relative ressource path from your Application root 
             or an absolue file path file:\\c:\dir\a.config
             </param>
            <param name="configureDelegate">
             Delegate called when the file has changed, to rebuild the dal.
             </param>
             <returns>An SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ConfigureAndWatch(System.IO.FileInfo,IBatisNet.Common.Utilities.ConfigureHandler)">
             <summary>
             Configure and monitor the configuration file for modifications 
             and automatically reconfigure SqlMap. 
             </summary>
             <param name="resource">
             A FileInfo to your config file.
             </param>
            <param name="configureDelegate">
             Delegate called when the file has changed, to rebuild the dal.
             </param>
             <returns>An SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.OnConfigFileChange(System.Object)">
            <summary>
            Callback called when the SqlMap.config changed.
            </summary>
            <param name="obj">The state config.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Build(System.Xml.XmlDocument,IBatisNet.Common.DataSource,System.Boolean,System.Boolean)">
            <summary>
            Build a SqlMapper instance
            </summary>
            <param name="document">An xml configuration document</param>
            <param name="dataSource">A data source</param>
            <param name="useConfigFileWatcher"></param>
            <param name="isCallFromDao"></param>
            <returns>return an a SqlMapper instance</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ValidateSchema(System.Xml.XmlNode,System.String)">
            <summary>
            validate againts schema
            </summary>
            <param name="section">The doc to validate</param>
            <param name="schemaFileName">schema File Name</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Build(System.Xml.XmlDocument,IBatisNet.Common.DataSource,System.Boolean,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Load statement, parameters, resultmap.
            </summary>
            <param name="document"></param>
            <param name="dataSource"></param>
            <param name="useConfigFileWatcher"></param>
            <param name="properties"></param>
            <returns></returns>
            <remarks>Used by Dao</remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Build(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Load SqlMap configuration from
            from the XmlDocument passed in parameter.
            </summary>
            <param name="document">The xml sql map configuration.</param>
            <param name="useConfigFileWatcher"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Reset">
            <summary>
            Reset PreparedStatements cache
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.Initialize">
            <summary>
            Intilaize an SqlMap.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.GetProviders">
            <summary>
            Load and initialize providers from specified file.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ParseProvider">
            <summary>
            Parse the provider tag.
            </summary>
            <returns>A provider object.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ConfigureSqlMap">
            <summary>
            Load sqlMap statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ProcessSqlStatement(IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Process the Sql Statement
            </summary>
            <param name="statement"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ParseDynamicTags(System.Xml.XmlNode,IBatisNet.DataMapper.Configuration.Sql.Dynamic.Elements.IDynamicParent,System.Text.StringBuilder,System.Boolean,System.Boolean)">
            <summary>
            Parse dynamic tags
            </summary>
            <param name="commandTextNode"></param>
            <param name="dynamic"></param>
            <param name="sqlBuffer"></param>
            <param name="isDynamic"></param>
            <param name="postParseRequired"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ApplyInlineParemeterMap(IBatisNet.DataMapper.Configuration.Statements.IStatement,System.String)">
            <summary>
            Apply inline paremeterMap
            </summary>
            <param name="statement"></param>
            <param name="sqlStatement"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ParseGlobalProperties">
            <summary>
            Initialize the list of variables defined in the
            properties file.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.GenerateCommandText(IBatisNet.DataMapper.SqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Generate the command text for CRUD operation
            </summary>
            <param name="sqlMap"></param>
            <param name="statement"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.BuildParameterMap">
            <summary>
            Build a ParameterMap
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.BuildResultMap">
            <summary>
            Build a ResultMap
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.ApplyNamespace(System.String)">
            <summary>
            Register under Statement Name or Fully Qualified Statement Name
            </summary>
            <param name="id">An Identity</param>
            <returns>The new Identity</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.DomSqlMapBuilder.GetStream(System.String)">
            <summary>
            Gets a resource stream.
            </summary>
            <param name="schemaResourceKey">The schema resource key.</param>
            <returns>A resource stream.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Configuration.SerializerFactory">
            <summary>
            Summary description for SerializerFactory.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.SerializerFactory.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Configuration.SerializerFactory.GetSerializer(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Exceptions.DataMapperException">
            <summary>
            The DataMapperException is thrown when an error in the SqlMapper component occurs.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Exceptions.DataMapperException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException"/> class.
            </summary>
            <remarks>
            This constructor initializes the <para>Message</para> property of the new instance 
            to a system-supplied message that describes the error.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.Exceptions.DataMapperException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException"/> 
            class with a reference to the inner exception that is the cause of this exception.
            </summary>
            <remarks>
            This constructor initializes the Message property of the new instance 
            using the message parameter.
            </remarks>
            <param name="ex">
            The exception that is the cause of the current exception. 
            If the innerException parameter is not a null reference (Nothing in Visual Basic), 
            the current exception is raised in a catch block that handles the inner exception.
            </param>
        </member>
        <member name="M:IBatisNet.DataMapper.Exceptions.DataMapperException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException"/> 
            class with a specified error message.
            </summary>
            <remarks>
            This constructor initializes the Message property of the new instance to 
            the Message property of the passed in exception. 
            </remarks>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Exceptions.DataMapperException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException"/> 
            class with a specified error message and a reference to the inner exception 
            that is the cause of this exception.
            </summary>
            <remarks>
            An exception that is thrown as a direct result of a previous exception should include a reference to the previous 
            exception in the InnerException property. 
            The InnerException property returns the same value that is passed into the constructor, or a null reference 
            (Nothing in Visual Basic) if the InnerException property does not supply the inner exception value to the constructor.
            </remarks>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that caused the error</param>
        </member>
        <member name="M:IBatisNet.DataMapper.Exceptions.DataMapperException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException"/> 
            class with serialized data.
            </summary>
            <remarks>
            This constructor is called during deserialization to reconstitute the 
            exception object transmitted over a stream.
            </remarks>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination. 
            </param>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement">
            <summary>
            Summary description for DeleteMappedStatement.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.MappedStatement">
            <summary>
            Summary description for MappedStatement.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.IMappedStatement">
            <summary>
            Summary description for IMappedStatement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForMap(IBatisNet.Common.IDalSession,System.Object,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="keyProperty"></param>
            <param name="valueProperty"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteUpdate(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteInsert(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="skipResults"></param>
            <param name="maxResults"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForRowDelegate(IBatisNet.Common.IDalSession,System.Object,IBatisNet.DataMapper.SqlMapper.RowDelegate)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="rowDelegate"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForObject(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.IMappedStatement.ExecuteQueryForObject(IBatisNet.Common.IDalSession,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.IMappedStatement.PreparedCommand">
            <summary>
            The IPreparedCommand to use
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.IMappedStatement.Name">
            <summary>
            Name used to identify the MappedStatement amongst the others.
            This the name of the SQL statment by default.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.IMappedStatement.Statement">
            <summary>
            The SQL statment used by this MappedStatement
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.IMappedStatement.SqlMap">
            <summary>
            The SqlMap used by this MappedStatement
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.#ctor(IBatisNet.DataMapper.SqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlMap">An SqlMap</param>
            <param name="statement">An SQL statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.GetDataCacheHitRatio">
            <summary>
            Gets a percentage of successful cache hits achieved
            </summary>
            <returns>The percentage of hits (0-1), or -1 if cache is disabled.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.FillObjectWithReaderAndResultMap(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader,IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap,System.Object)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="reader"></param>
            <param name="resultMap"></param>
            <param name="resultObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ApplyResultMap(IBatisNet.DataMapper.Scope.RequestScope,System.Data.IDataReader,System.Object)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="reader"></param>
            <param name="resultObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RetrieveOutputParameters(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.Common.IDalSession,System.Data.IDbCommand,System.Object)">
            <summary>
            Retrieve the output parameter and map them on the result object.
            This routine is only use is you specified a ParameterMap and some output attribute
            or if you use a store procedure with output parameter...
            </summary>
            <param name="request"></param>
            <param name="session">The current session.</param>
            <param name="result">The result object.</param>
            <param name="command">The command sql.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForObject(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForObject(IBatisNet.Common.IDalSession,System.Object,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object of the type of
            the resultObject passed in as a parameter.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForObject(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.Common.IDalSession,System.Object,System.Object)">
            <summary>
            Executes an SQL statement that returns a single row as an Object of the type of
            the resultObject passed in as a parameter.
            </summary>
            <param name="request">The request scope.</param>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">The result object.</param>
            <returns>The object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForRowDelegate(IBatisNet.Common.IDalSession,System.Object,IBatisNet.DataMapper.SqlMapper.RowDelegate)">
            <summary>
            Runs a query with a custom object that gets a chance 
            to deal with each row as it is processed.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            Executes the SQL and retuns all rows selected. This is exactly the same as
            calling ExecuteQueryForList(session, parameterObject, NO_SKIPPED_RESULTS, NO_MAXIMUM_RESULTS).
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns a subset of the rows selected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForList(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.Common.IDalSession,System.Object,System.Int32,System.Int32,IBatisNet.DataMapper.SqlMapper.RowDelegate)">
            <summary>
            Executes the SQL and retuns a List of result objects.
            </summary>
            <param name="request">The request scope.</param>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <param name="rowDelegate"></param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object,System.Collections.IList)">
            <summary>
            Executes the SQL and and fill a strongly typed collection.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">A strongly typed collection of result objects.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteUpdate(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            Execute an update statement. Also used for delete statement.
            Return the number of row effected.
            </summary>
            <param name="session">The session used to execute the statement.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>The number of row effected.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteInsert(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            Execute an insert statement. Fill the parameter object with 
            the ouput parameters if any, also could return the insert generated key
            </summary>
            <param name="session">The session</param>
            <param name="parameterObject">The parameter object used to fill the statement.</param>
            <returns>Can return the insert generated key.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteQueryForMap(IBatisNet.Common.IDalSession,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="session">
             The session used to execute the statement
             </param>
             <param name="parameterObject">
             The object used to set the parameters in the SQL.
             </param>
             <param name="keyProperty">
             The property of the result object to be used as the key.
             </param>
             <param name="valueProperty">
             The property of the result object to be used as the value (or null)
             </param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">
            If a transaction is not in progress, or the database throws an exception.
            </exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RunQueryForMap(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.Common.IDalSession,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="request">The request scope.</param>
             <param name="session">The session used to execute the statement</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A hashtable of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecutePostSelect(IBatisNet.Common.IDalSession,IBatisNet.DataMapper.Scope.RequestScope)">
            <summary>
            Process 'select' result properties
            </summary>
            <param name="request"></param>
            <param name="session"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.SetObjectProperty(IBatisNet.DataMapper.Scope.RequestScope,IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap,IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Object@,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="resultMap"></param>
            <param name="mapping"></param>
            <param name="target"></param>
            <param name="reader"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.RaiseExecuteEvent">
            <summary>
            Raise an event ExecuteEventArgs
            (Used when a query is executed)
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ToString">
            <summary>
            ToString implementation.
            </summary>
            <returns>A string that describes the MappedStatement</returns>
        </member>
        <member name="E:IBatisNet.DataMapper.MappedStatements.MappedStatement.Execute">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.PreparedCommand">
            <summary>
            The IPreparedCommand to use
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.Name">
            <summary>
            Name used to identify the MappedStatement amongst the others.
            This the name of the SQL statement by default.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.Statement">
            <summary>
            The SQL statment used by this MappedStatement
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.SqlMap">
            <summary>
            The SqlMap used by this MappedStatement
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.MappedStatement.ExecuteMethod">
            <summary>
            Enumeration of the ExecuteQuery method.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.MappedStatement.PostBindind">
            <summary>
            All data tor retrieve 'select' result property
            </summary>
            <remarks>
            As ADO.NET allows to open DataReader per connection at once, we keep
            all th data to make the open the 'whish' DataReader after having closed the current. 
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.PostBindind.Statement">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.PostBindind.ResultProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.PostBindind.Target">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.PostBindind.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.MappedStatement.PostBindind.Method">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ReaderAutoMapper.#ctor(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory,System.Data.IDataReader,System.Object@)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="resultObject"></param>
            <param name="typeHandlerFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.MappedStatement.ReaderAutoMapper.AutoMapReader(System.Data.IDataReader,System.Object@)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="resultObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.#ctor(IBatisNet.DataMapper.SqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlMap">An SqlMap</param>
            <param name="statement">An SQL statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForMap(IBatisNet.Common.IDalSession,System.Object,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="keyProperty"></param>
            <param name="valueProperty"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteInsert(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="skipResults"></param>
            <param name="maxResults"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForRowDelegate(IBatisNet.Common.IDalSession,System.Object,IBatisNet.DataMapper.SqlMapper.RowDelegate)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="rowDelegate"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForObject(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.DeleteMappedStatement.ExecuteQueryForObject(IBatisNet.Common.IDalSession,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.ExecuteEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement">
            <summary>
            Summary description for InsertMappedStatement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.#ctor(IBatisNet.DataMapper.SqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlMap">An SqlMap</param>
            <param name="statement">An SQL statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForMap(IBatisNet.Common.IDalSession,System.Object,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="keyProperty"></param>
            <param name="valueProperty"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteUpdate(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="skipResults"></param>
            <param name="maxResults"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForRowDelegate(IBatisNet.Common.IDalSession,System.Object,IBatisNet.DataMapper.SqlMapper.RowDelegate)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="rowDelegate"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForObject(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.InsertMappedStatement.ExecuteQueryForObject(IBatisNet.Common.IDalSession,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.PaginatedList">
            <summary>
            Summary description for PaginatedDataList.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.#ctor(IBatisNet.DataMapper.MappedStatements.IMappedStatement,System.Object,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="mappedStatement"></param>
            <param name="parameterObject"></param>
            <param name="pageSize"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.PageForward">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.PageBack">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.SafePageTo(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.PageTo(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.GetList(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="localPageSize"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.SubList(System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Provides a view of the IList pramaeter 
            from the specified position <paramref name="fromIndex"/> 
            to the specified position <paramref name="toIndex"/>. 
            </summary>
            <param name="list">The IList elements.</param>
            <param name="fromIndex">Starting position for the view of elements. </param>
            <param name="toIndex">Ending position for the view of elements. </param>
            <returns> A view of list.
            </returns>
            <remarks>
            The list that is returned is just a view, it is still backed
            by the orignal list.  Any changes you make to it will be 
            reflected in the orignal list.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.GotoPage(System.Int32)">
            <summary>
            
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.NextPage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.PreviousPage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Insert(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Remove(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Contains(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.IndexOf(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Add(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.CopyTo(System.Array,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.Reset">
            <summary>
            Sets the enumerator to its initial position, 
            which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.PaginatedList.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; 
            false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsPreviousPageAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsFirstPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsMiddlePage">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsNextPageAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsLastPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsFixedSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.IsSynchronized">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.SyncRoot">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.MappedStatements.PaginatedList.Current">
            <summary>
            Gets the current element in the page.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.SelectMappedStatement">
            <summary>
            Summary description for SelectMappedStatement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.SelectMappedStatement.#ctor(IBatisNet.DataMapper.SqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlMap">An SqlMap</param>
            <param name="statement">An SQL statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.SelectMappedStatement.ExecuteInsert(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.SelectMappedStatement.ExecuteUpdate(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement">
            <summary>
            Summary description for UpdateMappedStatement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.#ctor(IBatisNet.DataMapper.SqlMapper,IBatisNet.DataMapper.Configuration.Statements.IStatement)">
            <summary>
            Constructor
            </summary>
            <param name="sqlMap">An SqlMap</param>
            <param name="statement">An SQL statement</param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForMap(IBatisNet.Common.IDalSession,System.Object,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="keyProperty"></param>
            <param name="valueProperty"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteInsert(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="skipResults"></param>
            <param name="maxResults"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForList(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForRowDelegate(IBatisNet.Common.IDalSession,System.Object,IBatisNet.DataMapper.SqlMapper.RowDelegate)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="rowDelegate"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForObject(IBatisNet.Common.IDalSession,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.MappedStatements.UpdateMappedStatement.ExecuteQueryForObject(IBatisNet.Common.IDalSession,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="parameterObject"></param>
            <param name="resultObject"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Scope.ConfigurationScope">
            <summary>
            The ConfigurationScope maintains the state of the build process.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.ConfigurationScope.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.ConfigurationScope.ResolveTypeHandler(System.Type,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="clazz">Type of the ResultMap</param>
            <param name="propertyName">Property name to map</param>
            <param name="clrType"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.ValidateSqlMapConfig">
            <summary>
            Indicates whether or not to validate the configuration document
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.ValidateSqlMap">
            <summary>
            Set if theparser should validate the sqlMap documents
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.IsXmlValid">
            <summary>
            Tells us if the xml configuration file validate the schema 
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.SqlMapNamespace">
            <summary>
            The current SqlMap namespace.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.SqlMapper">
            <summary>
            The SqlMapper we are building.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.TypeHandlerFactory">
            <summary>
            The current TypeHandlerFactory
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.IsCallFromDao">
            <summary>
            Tell us if we are in a DataAccess context.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.IsCacheModelsEnabled">
            <summary>
            Tell us if we cache model is enabled.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.DataSource">
            <summary>
            External data source
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.NodeContext">
            <summary>
            The current context node we are analizing
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.SqlMapConfigDocument">
            <summary>
            The XML SqlMap config file
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.SqlMapDocument">
            <summary>
            A XML SqlMap file
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.UseConfigFileWatcher">
            <summary>
            Tell us if we use Configuration File Watcher
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.UseStatementNamespaces">
            <summary>
            Tell us if we use statements namespaces
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.ErrorContext">
            <summary>
             Get the request's error context
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.Providers">
            <summary>
             List of providers
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.Properties">
            <summary>
             List of global properties
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ConfigurationScope.UseEmbedStatementParams">
            <summary>
            Indicates if parameters should be embedded in the sql statement.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Scope.ErrorContext">
            <summary>
            An error context to help us create meaningful error messages.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.ErrorContext.Reset">
            <summary>
            Clear the error context
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.ErrorContext.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ErrorContext.Resource">
            <summary>
            The resource causing the problem
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ErrorContext.Activity">
            <summary>
            The activity that was happening when the error happened
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ErrorContext.ObjectId">
            <summary>
            The object ID where the problem happened
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.ErrorContext.MoreInfo">
            <summary>
            More information about the error
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.Scope.RequestScope">
            <summary>
            Hold data during the process of a mapped statement.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.RequestScope.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Scope.RequestScope.GetResultMap(System.Data.IDataReader)">
            <summary>
            Check if the ResultMap is well set, process case of subMap resultMap.
            </summary>
            <param name="dataReader">The current IDataReader</param>
            <returns>the resultMap to use</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.ErrorContext">
            <summary>
             Get the request's error context
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.QueueSelect">
            <summary>
            The 'select' result property to process after having process the main properties.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.ResultMap">
            <summary>
            The ResultMap used by this request.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.ParameterMap">
            <summary>
            The parameterMap used by this request.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.Scope.RequestScope.PreparedStatement">
            <summary>
            The PreparedStatement used by this request.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.SessionContainer.ISessionContainer">
            <summary>
            Definition for session container.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionContainer.ISessionContainer.Store(IBatisNet.DataMapper.SqlMapSession)">
            <summary>
            Store the local session on the container.
            Ensure that the session is unique for each thread.
            </summary>
            <param name="session">The session to store</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionContainer.ISessionContainer.Dispose">
            <summary>
            Remove the local session from the container.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SessionContainer.ISessionContainer.LocalSession">
            <summary>
            Get the local session
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.SessionContainer.SessionContainerFactory">
            <summary>
            Build a session container for a Windows or Web context.
            When running in the context of a web application the session object is 
            stored in HttpContext items and has 'per request' lifetime.
            When running in the context of a windows application the session object is 
            stored in a with a TLS (ThreadLocalStorage).
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionContainer.SessionContainerFactory.GetSessionContainer(System.String)">
            <summary>
            Get a session container for a Windows or Web context.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.SessionContainer.WebSessionContainer">
            <summary>
            Session container for web application.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SessionContainer.WebSessionContainer.LOCAL_SESSION">
            <summary>
            Token for SqlMapConfig xml root.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionContainer.WebSessionContainer.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionContainer.WebSessionContainer.Store(IBatisNet.DataMapper.SqlMapSession)">
            <summary>
            Store the local session on the container.
            Ensure that the session is unique for each thread.
            </summary>
            <param name="session">The session to store</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionContainer.WebSessionContainer.Dispose">
            <summary>
            Remove the local session from the container.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SessionContainer.WebSessionContainer.LocalSession">
            <summary>
            Get the local session
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.SessionContainer.WindowSessionContainer">
            <summary>
            Session container for windows/console application.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionContainer.WindowSessionContainer.Store(IBatisNet.DataMapper.SqlMapSession)">
            <summary>
            Store the local session on the container.
            Ensure that the session is unique for each thread.
            </summary>
            <param name="session">The session to store</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SessionContainer.WindowSessionContainer.Dispose">
            <summary>
            Remove the local session from the container.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SessionContainer.WindowSessionContainer.LocalSession">
            <summary>
            Get the local session
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler">
            <summary>
            Summary description for BaseTypeHandler.
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ITypeHandler">
            <summary>
            Summary description for ITypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
             Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.Equals(System.Object,System.String)">
            <summary>
             Compares two values (that this handler deals with) for equality
            </summary>
            <param name="obj">one of the objects</param>
            <param name="str">the other object as a String</param>
            <returns>true if they are equal</returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ITypeHandler.IsSimpleType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the name
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            Gets a column value by the index
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.GetDataBaseValue(System.Object,System.Type)">
            <summary>
            Retrieve ouput database value of an output parameter
            </summary>
            <param name="outputValue">ouput database value</param>
            <param name="parameterType">type used in EnumTypeHandler</param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.ValueOf(System.Type,System.String)">
            <summary>
            Converts the String to the type that this handler deals with
            </summary>
            <param name="type">the tyepe of the property (used only for enum conversion)</param>
            <param name="s">the String value</param>
            <returns>the converted value</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
             Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BaseTypeHandler.Equals(System.Object,System.String)">
            <summary>
             Compares two values (that this handler deals with) for equality
            </summary>
            <param name="obj">one of the objects</param>
            <param name="str">the other object as a String</param>
            <returns>true if they are equal</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.BooleanTypeHandler">
            <summary>
            Boolean TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.BooleanTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ByteArrayTypeHandler">
            <summary>
            Description résumée de ByteArrayTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteArrayTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ByteTypeHandler">
            <summary>
            Description résumée de ByteTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ByteTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.CharTypeHandler">
            <summary>
            Description résumée de CharTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CharTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler">
            <summary>
            Custom type handler for adding a TypeHandlerCallback
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.CustomTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Performs processing on a value before it is used to set
            the parameter of a IDbCommand.
            </summary>
            <param name="dataParameter"></param>
            <param name="parameterValue">The value to be set</param>
            <param name="dbType">Data base type</param>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.DateTimeTypeHandler">
            <summary>
            Description résumée de DateTimeTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DateTimeTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.DecimalTypeHandler">
            <summary>
            Description résumée de DecimalTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DecimalTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.DoubleTypeHandler">
            <summary>
            Description résumée de Double.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.DoubleTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.EnumTypeHandler">
            <summary>
            Summary description for EnumTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.EnumTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
             Sets a parameter on a IDbCommand
            </summary>
            <param name="dataParameter">the parameter</param>
            <param name="parameterValue">the parameter value</param>
            <param name="dbType">the dbType of the parameter</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.EnumTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.GuidTypeHandler">
            <summary>
            Description résumée de GuidTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.GuidTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Int16TypeHandler">
            <summary>
            Description résumée de Int16TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int16TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Int32TypeHandler">
            <summary>
            Summary description for Int32TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int32TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.Int64TypeHandler">
            <summary>
            Description résumée de Int64TypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.Int64TypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.IParameterSetter">
            <summary>
            Allows parameters to be set on the underlying prepared IDbCommand.
            TypeHandlerCallback implementations use this interface to
            process values before they are set on the IDbCommand.
            </summary>
            <remarks>
            There is no need to implement this.  The implementation
            will be passed into the TypeHandlerCallback automatically.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.IParameterSetter.DataParameter">
            <summary>
            Returns the underlying IDataParameter
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.IParameterSetter.Value">
            <summary>
            Get the parameter value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.IResultGetter">
            <summary>
            Allows values to be retrieved from the underlying IDataReader.
            TypeHandlerCallback implementations use this interface to
            get values that they can subsequently manipulate before
            having them returned.  																																																														   * or index with these methods.
            </summary>
            <remarks>
            There is no need to implement this.  The implementation
            will be passed into the TypeHandlerCallback automatically.
            </remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.IResultGetter.DataReader">
            <summary>
            Returns the underlying IDataReader
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.IResultGetter.Value">
            <summary>
            Get the parameter value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ITypeHandlerCallback">
            <summary>
            A simple interface for implementing custom type handlers.
            <p/>
            Using this interface, you can implement a type handler that
            will perform customized processing before parameters are set
            on a IDbCommand and after values are retrieved from
            a IDataReader.  Using a custom type handler you can extend
            the framework to handle types that are not supported, or
            handle supported types in a different way.  For example,
            you might use a custom type handler to implement proprietary
            BLOB support (e.g. Oracle), or you might use it to handle
            booleans using "Y" and "N" instead of the more typical 0/1.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandlerCallback.SetParameter(IBatisNet.DataMapper.TypeHandlers.IParameterSetter,System.Object)">
            <summary>
            Performs processing on a value before it is used to set
            the parameter of a IDbCommand.
            </summary>
            <param name="setter">The interface for setting the value on the IDbCommand.</param>
            <param name="parameter">The value to be set</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandlerCallback.GetResult(IBatisNet.DataMapper.TypeHandlers.IResultGetter)">
            <summary>
            Performs processing on a value before after it has been retrieved
            from a IDataReader.
            </summary>
            <param name="getter">The interface for getting the value from the IDataReader.</param>
            <returns>The processed value.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ITypeHandlerCallback.ValueOf(System.String)">
            <summary>
            Casts the string representation of a value into a type recognized by
            this type handler.  This method is used to translate nullValue values
            into types that can be appropriately compared.  If your custom type handler
            cannot support nullValues, or if there is no reasonable string representation
            for this type (e.g. File type), you can simply return the String representation
            as it was passed in.  It is not recommended to return null, unless null was passed
            in.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ObjectTypeHandler">
            <summary>
            Description résumée de ObjectTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ObjectTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ParameterSetterImpl">
            <summary>
            A ParameterSetter implementation
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ParameterSetterImpl.#ctor(System.Data.IDataParameter)">
            <summary>
            Default Constructor
            </summary>
            <param name="dataParameter"></param>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ParameterSetterImpl.DataParameter">
            <summary>
            Returns the underlying DataParameter
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ParameterSetterImpl.Value">
            <summary>
            Set the parameter value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl">
            <summary>
            Description résumée de ResultGetterImpl.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl.#ctor(System.Data.IDataReader,System.Int32)">
            <summary>
            Creates an instance for a IDataReader and column index
            </summary>
            <param name="dataReader">The dataReader</param>
            <param name="columnIndex">the column index</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl.#ctor(System.Data.IDataReader,System.String)">
            <summary>
            Creates an instance for a IDataReader and column name
            </summary>
            <param name="dataReader">The dataReader</param>
            <param name="columnName">the column name</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl.#ctor(System.Object)">
            <summary>
            Creates an instance for an output parameter
            </summary>
            <param name="outputValue">value of an output parameter (store procedure)</param>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl.DataReader">
            <summary>
            Returns the underlying IDataReader
            </summary>
            <remarks>Null for an output parameter</remarks>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.ResultGetterImpl.Value">
            <summary>
            Get the parameter value
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.SingleTypeHandler">
            <summary>
            Description résumée de SingleTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.SingleTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.SingleTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.SingleTypeHandler.IsSimpleType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.StringTypeHandler">
            <summary>
            Description résumée de SByteTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.StringTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.StringTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.StringTypeHandler.IsSimpleType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler">
            <summary>
            Description résumée de TimespanTypeHandler.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler.GetValueByName(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler.GetValueByIndex(IBatisNet.DataMapper.Configuration.ResultMapping.ResultProperty,System.Data.IDataReader)">
            <summary>
            
            </summary>
            <param name="mapping"></param>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.TypeHandlers.TimeSpanTypeHandler.IsSimpleType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory">
            <summary>
            Not much of a suprise, this is a factory class for TypeHandler objects.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.GetTypeHandler(System.Type)">
            <summary>
            Get a TypeHandler for a Type
            </summary>
            <param name="type">the Type you want a TypeHandler for</param>
            <returns>the handler</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.GetTypeHandler(System.Type,System.String)">
            <summary>
            Get a TypeHandler for a type
            </summary>
            <param name="type">the type you want a TypeHandler for</param>
            <param name="dbType">the database type</param>
            <returns>the handler</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.GetPrivateTypeHandler(System.Type,System.String)">
            <summary>
             Get a TypeHandler for a type and a dbType type
            </summary>
            <param name="type">the type</param>
            <param name="dbType">the dbType type</param>
            <returns>the handler</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.Register(System.Type,IBatisNet.DataMapper.TypeHandlers.ITypeHandler)">
            <summary>
            Register (add) a type handler for a type
            </summary>
            <param name="type">the type</param>
            <param name="handler">the handler instance</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.Register(System.Type,System.String,IBatisNet.DataMapper.TypeHandlers.ITypeHandler)">
            <summary>
            Register (add) a type handler for a type and dbType
            </summary>
            <param name="type">the type</param>
            <param name="dbType">the dbType</param>
            <param name="handler">the handler instance</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.GetUnkownTypeHandler">
            <summary>
            When in doubt, get the "unknown" type handler
            </summary>
            <returns>if I told you, it would not be unknown, would it?</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory.IsSimpleType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler">
            <summary>
             Implementation of TypeHandler for dealing with unknown types
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.#ctor(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory)">
            <summary>
            Constructor to create via a factory
            </summary>
            <param name="factory">the factory to associate this with</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.SetParameter(System.Data.IDataParameter,System.Object,System.String)">
            <summary>
            Performs processing on a value before it is used to set
            the parameter of a IDbCommand.
            </summary>
            <param name="dataParameter"></param>
            <param name="parameterValue">The value to be set</param>
            <param name="dbType">Data base type</param>
        </member>
        <member name="M:IBatisNet.DataMapper.TypeHandlers.UnknownTypeHandler.Equals(System.Object,System.String)">
            <summary>
             Compares two values (that this handler deals with) for equality
            </summary>
            <param name="obj">one of the objects</param>
            <param name="str">the other object as a String</param>
            <returns>true if they are equal</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.CacheKey">
            <summary>
            Summary description for FlushInterval.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.CacheKey.#ctor(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory,System.String,System.String,System.Object,System.String[],System.Int32,System.Int32,IBatisNet.DataMapper.CacheKeyType)">
            <summary>
            
            </summary>
            <param name="statementName"></param>
            <param name="sql"></param>
            <param name="parameter"></param>
            <param name="properties"></param>
            <param name="skipRecords"></param>
            <param name="maxResults"></param>
            <param name="type"></param>
            <param name="typeHandlerFactory"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.CacheKey.GenerateHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.CacheKey.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.CacheKey.GetHashCode">
            <summary>
            Get the HashCode for this CacheKey
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.CacheKey.ToString">
            <summary>
            ToString implementation.
            </summary>
            <returns>A string that give the CacheKey HashCode.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.SelectKeyType">
            <summary>
            Indicate if the generated key by a selectKey statement
             concern a pre or post-generated key.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SelectKeyType.pre">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SelectKeyType.post">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.CacheKeyType">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.CacheKeyType.Object">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.CacheKeyType.List">
            <summary>
            
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.CacheKeyType.Map">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.ExecuteEventArgs">
            <summary>
            Summary description for ExecuteEventArgs.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.ExecuteEventArgs.StatementName">
            <summary>
            Set or get the statement name
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.LazyLoadList">
            <summary>
            Summary description for LazyLoadList.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.LazyLoadList.#cctor">
            <summary>
            Constructor for a lazy list loader
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.LazyLoadList.#ctor(IBatisNet.Common.DataSource,IBatisNet.DataMapper.MappedStatements.MappedStatement,System.Object,System.Object,System.String)">
            <summary>
            Constructor for a lazy list loader
            </summary>
            <param name="dataSource">The dataSource used to do the query</param>
            <param name="mappedSatement">The mapped statement used to build the list</param>
            <param name="param">The parameter object used to build the list</param>
            <param name="propertyName">The property's name which been proxified.</param>
            <param name="target">The target object which contains the property proxydied.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.LazyLoadList.NewInstance(IBatisNet.Common.DataSource,IBatisNet.DataMapper.MappedStatements.MappedStatement,System.Object,System.Object,System.String)">
            <summary>
            Static constructor
            </summary>
            <param name="dataSource">The dataSource used the query</param>
            <param name="mappedSatement">The statement used to build the list</param>
            <param name="param">The parameter object used to build the list</param>
            <param name="propertyName">The property's name which been proxified.</param>
            <param name="target">The target object which contains the property proxydied.</param>
            <returns>A proxy</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.LazyLoadList.Intercept(Castle.DynamicProxy.IInvocation,System.Object[])">
            <summary>
            
            </summary>
            <param name="invocation"></param>
            <param name="arguments"></param>
            <returns></returns>
        </member>
        <member name="T:IBatisNet.DataMapper.Mapper">
            <summary>
            A singleton class to access the default SqlMapper defined by the SqlMap.Config
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Mapper.Configure(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.Mapper.InitMapper">
            <summary>
            Init the 'default' SqlMapper defined by the SqlMap.Config file.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.Mapper.Instance">
            <summary>
            Get the instance of the SqlMapper defined by the SqlMap.Config file.
            </summary>
            <returns>A SqlMapper initalized via the SqlMap.Config file.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.Mapper.Get">
            <summary>
            Get the instance of the SqlMapper defined by the SqlMap.Config file. (Convenience form of Instance method.)
            </summary>
            <returns>A SqlMapper initalized via the SqlMap.Config file.</returns>
        </member>
        <member name="T:IBatisNet.DataMapper.SqlMapper">
            <summary>
            Summary description for SqlMap.
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SqlMapper._sessionContainer">
            <summary>
            Container session unique for each thread. 
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.#ctor(IBatisNet.DataMapper.TypeHandlers.TypeHandlerFactory)">
            <summary>
            Create a new SqlMap
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.SetCacheModelsEnabled(System.Boolean)">
            <summary>
            Set the falg to tell us if cache models were enabled
            or not.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.SetUseEmbedStatementParams(System.Boolean)">
            <summary>
            Sets the flag indicating if statements should used embedded
            parameters
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.Configure(System.Xml.XmlDocument)">
            <summary>
            Configure an SqlMap.
            </summary>
            <param name="document">An xml sql map configuration document.</param>
            <returns>the SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.Configure">
            <summary>
            Configure an SqlMap from default resource file named SqlMap.config.
            </summary>
            <returns>An SqlMap</returns>
            <remarks>The file path is relative to the application root.</remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.Configure(System.String)">
            <summary>
            Configure an SqlMap from via a relative ressource path.
            </summary>
            <param name="resource">
            A relative ressource path from your Application root 
            or an absolue file path file:\\c:\dir\a.config
            </param>
            <returns>An SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.ConfigureAndWatch(IBatisNet.Common.Utilities.ConfigureHandler)">
            <summary>
            Configure and monitor the default configuration file for modifications 
            and automatically reconfigure SqlMap. 
            </summary>
            <returns>An SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.ConfigureAndWatch(System.String,IBatisNet.Common.Utilities.ConfigureHandler)">
             <summary>
             Configure and monitor the configuration file for modifications 
             and automatically reconfigure SqlMap. 
             </summary>
             <param name="resource">
             A relative ressource path from your Application root 
             or a absolue file path file:\\c:\dir\a.config
             </param>
            <param name="configureDelegate">
             Delegate called when the file has changed, to rebuild the dal.
             </param>
             <returns>An SqlMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.OpenConnection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.CloseConnection">
            <summary>
            Open a connection
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction">
            <summary>
            Begins a database transaction.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction(System.Boolean)">
            <summary>
            Begins a database transaction on the currect session
            </summary>
            <param name="openConnection">Open a connection.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a database transaction with the specified isolation level.
            </summary>
            <param name="isolationLevel">
            The isolation level under which the transaction should run.
            </param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.BeginTransaction(System.Boolean,System.Data.IsolationLevel)">
            <summary>
            Start a database transaction on the current session
            with the specified isolation level.
            </summary>
            <param name="openConnection">Open a connection.</param>
            <param name="isolationLevel">
            The isolation level under which the transaction should run.
            </param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.CommitTransaction">
            <summary>
            Commits the database transaction.
            </summary>
            <remarks>
            Will close the connection.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.CommitTransaction(System.Boolean)">
            <summary>
            Commits the database transaction.
            </summary>
            <param name="closeConnection">Close the connection</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.RollBackTransaction">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
            <remarks>
            Will close the connection.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.RollBackTransaction(System.Boolean)">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
            <param name="closeConnection">Close the connection</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForObject(System.String,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns that returns data 
            to populate a single object instance.
            <p/>
            The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns> The single result object populated with the result set data.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForObject(System.String,System.Object,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns a single object of the type of the
            resultObject parameter.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">An object of the type to be returned.</param>
            <returns>The single result object populated with the result set data.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForDictionary(System.String,System.Object,System.String)">
            <summary>
             Alias to QueryForMap, .NET spirit.
             Feature idea by Ted Husted.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="keyProperty">The property of the result object to be used as the key.</param>
            <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForDictionary(System.String,System.Object,System.String,System.String)">
             <summary>
             Alias to QueryForMap, .NET spirit.
              Feature idea by Ted Husted.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForMap(System.String,System.Object,System.String)">
            <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the entire result object.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="keyProperty">The property of the result object to be used as the key.</param>
            <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForMap(System.String,System.Object,System.String,System.String)">
             <summary>
             Executes the SQL and retuns all rows selected in a map that is keyed on the property named
             in the keyProperty parameter.  The value at each key will be the value of the property specified
             in the valueProperty parameter.  If valueProperty is null, the entire result object will be entered.
             </summary>
             <param name="statementName">The name of the sql statement to execute.</param>
             <param name="parameterObject">The object used to set the parameters in the SQL.</param>
             <param name="keyProperty">The property of the result object to be used as the key.</param>
             <param name="valueProperty">The property of the result object to be used as the value (or null)</param>
             <returns>A IDictionary (Hashtable) of object containing the rows keyed by keyProperty.</returns>
            <exception cref="T:IBatisNet.DataMapper.Exceptions.DataMapperException">If a transaction is not in progress, or the database throws an exception.</exception>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForList(System.String,System.Object)">
            <summary>
            Executes a Sql SELECT statement that returns data to populate
            a number of result objects.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForList(System.String,System.Object,System.Int32,System.Int32)">
            <summary>
            Executes the SQL and retuns all rows selected.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="skipResults">The number of rows to skip over.</param>
            <param name="maxResults">The maximum number of rows to return.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForList(System.String,System.Object,System.Collections.IList)">
            <summary>
            Executes a Sql SELECT statement that returns data to populate
            a number of result objects.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="resultObject">An Ilist object used to hold the objects.</param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryForPaginatedList(System.String,System.Object,System.Int32)">
            <summary>
            Executes the SQL and retuns a subset of the results in a dynamic PaginatedList that can be used to
            automatically scroll through results from a database table.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL</param>
            <param name="pageSize">The maximum number of objects to store in each page</param>
            <returns>A PaginatedList of beans containing the rows</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.QueryWithRowDelegate(System.String,System.Object,IBatisNet.DataMapper.SqlMapper.RowDelegate)">
            <summary>
            Runs a query with a custom object that gets a chance to deal 
            with each row as it is processed.
            <p/>
             The parameter object is generally used to supply the input
            data for the WHERE clause parameter(s) of the SELECT statement.
            </summary>
            <param name="statementName">The name of the sql statement to execute.</param>
            <param name="parameterObject">The object used to set the parameters in the SQL.</param>
            <param name="rowDelegate"></param>
            <returns>A List of result objects.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.Insert(System.String,System.Object)">
            <summary>
            Executes a Sql INSERT statement.
            Insert is a bit different from other update methods, as it
            provides facilities for returning the primary key of the
            newly inserted row (rather than the effected rows).  This
            functionality is of course optional.
            <p/>
            The parameter object is generally used to supply the input
            data for the INSERT values.
            </summary>
            <param name="statementName">The name of the statement to execute.</param>
            <param name="parameterObject">The parameter object.</param>
            <returns> The primary key of the newly inserted row.  
            This might be automatically generated by the RDBMS, 
            or selected from a sequence table or other source.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.Update(System.String,System.Object)">
            <summary>
            Executes a Sql UPDATE statement.
            Update can also be used for any other update statement type,
            such as inserts and deletes.  Update returns the number of
            rows effected.
            <p/>
            The parameter object is generally used to supply the input
            data for the UPDATE values as well as the WHERE clause parameter(s).
            </summary>
            <param name="statementName">The name of the statement to execute.</param>
            <param name="parameterObject">The parameter object.</param>
            <returns>The number of rows effected.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.Delete(System.String,System.Object)">
            <summary>
             Executes a Sql DELETE statement.
             Delete returns the number of rows effected.
            </summary>
            <param name="statementName">The name of the statement to execute.</param>
            <param name="parameterObject">The parameter object.</param>
            <returns>The number of rows effected.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetMappedStatement(System.String)">
            <summary>
            Gets a MappedStatement by name
            </summary>
            <param name="name"> The name of the statement</param>
            <returns> The MappedStatement</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.AddMappedStatement(System.String,IBatisNet.DataMapper.MappedStatements.MappedStatement)">
            <summary>
            Adds a (named) MappedStatement.
            </summary>
            <param name="key"> The key name</param>
            <param name="mappedStatement">The statement to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetParameterMap(System.String)">
            <summary>
            Get a ParameterMap by name
            </summary>
            <param name="name">The name of the ParameterMap</param>
            <returns>The ParameterMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.AddParameterMap(IBatisNet.DataMapper.Configuration.ParameterMapping.ParameterMap)">
            <summary>
            Adds a (named) ParameterMap.
            </summary>
            <param name="parameterMap">the ParameterMap to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetResultMap(System.String)">
            <summary>
            Gets a ResultMap by name
            </summary>
            <param name="name">The name of the result map</param>
            <returns>The ResultMap</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.AddResultMap(IBatisNet.DataMapper.Configuration.ResultMapping.ResultMap)">
            <summary>
            Adds a (named) ResultMap
            </summary>
            <param name="resultMap">The ResultMap to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetTypeAlias(System.String)">
            <summary>
            Gets a named TypeAlias from the list of available TypeAlias
            </summary>
            <param name="name">The name of the TypeAlias.</param>
            <returns>The TypeAlias.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.AddTypeAlias(System.String,IBatisNet.DataMapper.Configuration.Alias.TypeAlias)">
            <summary>
            Adds a named TypeAlias to the list of available TypeAlias.
            </summary>
            <param name="key">The key name.</param>
            <param name="typeAlias"> The TypeAlias.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetType(System.String)">
            <summary>
            Gets the type object from the specific class name.
            </summary>
            <param name="className">The supplied class name.</param>
            <returns>The correpsonding type.
            </returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.FlushCaches">
            <summary>
            Flushes all cached objects that belong to this SqlMap
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.AddCache(IBatisNet.DataMapper.Configuration.Cache.CacheModel)">
            <summary>
            Adds a (named) cache.
            </summary>
            <param name="cache">The cache to add</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetCache(System.String)">
            <summary>
            Gets a cache by name
            </summary>
            <param name="name">The name of the cache to get</param>
            <returns>The cache object</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapper.GetDataCacheStats">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.LocalSession">
            <summary>
             Returns the DalSession instance 
             currently being used by the SqlMap.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.IsSessionStarted">
            <summary>
            Tell if the session is started.
            </summary>
            <returns></returns>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.IsCacheModelsEnabled">
            <summary>
            A flag that determines whether cache models were enabled 
            when this SqlMap was built.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.UseEmbedStatementParams">
            <summary>
            A flag that determines whether statements use
            embedded parameters.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.TypeHandlerFactory">
            <summary>
            The TypeHandlerFactory
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.MappedStatements">
            <summary>
            The MappedStatements collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.ParameterMaps">
            <summary>
            The ParameterMap collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.ResultMaps">
            <summary>
            The ResultMap collection
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapper.DataSource">
            <summary>
            The DataSource
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.SqlMapper.RowDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:IBatisNet.DataMapper.SqlMapSession">
            <summary>
            Summary description for SqlMapSession.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.#ctor(IBatisNet.DataMapper.SqlMapper)">
            <summary>
            
            </summary>
            <param name="sqlMapper"></param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.#ctor(IBatisNet.Common.DataSource)">
            <summary>
            
            </summary>
            <param name="dataSource"></param>
        </member>
        <member name="F:IBatisNet.DataMapper.SqlMapSession._consistent">
            <summary>
            Changes the vote to commit (true) or to abort (false) in transsaction
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SqlMapSession._connection">
            <summary>
            Holds value of connection
            </summary>
        </member>
        <member name="F:IBatisNet.DataMapper.SqlMapSession._transaction">
            <summary>
            Holds value of transaction
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.Complete">
            <summary>
            Complete (commit) a transaction
            </summary>
            <remarks>
            Use in 'using' syntax.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.OpenConnection">
            <summary>
            Open the connection
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CloseConnection">
            <summary>
            Close the connection
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction">
            <summary>
            Begins a database transaction.
            </summary>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction(System.Boolean)">
            <summary>
            Begins a database transaction
            </summary>
            <param name="openConnection">Open a connection.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a database transaction with the specified isolation level.
            </summary>
            <param name="isolationLevel">
            The isolation level under which the transaction should run.
            </param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.BeginTransaction(System.Boolean,System.Data.IsolationLevel)">
            <summary>
            Begins a transaction on the current connection
            with the specified IsolationLevel value.
            </summary>
            <param name="isolationLevel">The transaction isolation level for this connection.</param>
            <param name="openConnection">Open a connection.</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CommitTransaction">
            <summary>
            Commits the database transaction.
            </summary>
            <remarks>
            Will close the connection.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CommitTransaction(System.Boolean)">
            <summary>
            Commits the database transaction.
            </summary>
            <param name="closeConnection">Close the connection</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.RollBackTransaction">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
            <remarks>
            Will close the connection.
            </remarks>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.RollBackTransaction(System.Boolean)">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
            <param name="closeConnection">Close the connection</param>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CreateCommand(System.Data.CommandType)">
            <summary>
            Create a command object
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CreateDataParameter">
            <summary>
            Create an IDataParameter
            </summary>
            <returns>An IDataParameter.</returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CreateDataAdapter">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.CreateDataAdapter(System.Data.IDbCommand)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:IBatisNet.DataMapper.SqlMapSession.Dispose">
            <summary>
            Releasing, or resetting resources.
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapSession.DataSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapSession.Connection">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapSession.Transaction">
            <summary>
            
            </summary>
        </member>
        <member name="P:IBatisNet.DataMapper.SqlMapSession.Consistent">
            <summary>
            Changes the vote for transaction to commit (true) or to abort (false).
            </summary>
        </member>
    </members>
</doc>
