IBatisNet Change Log

------------------------------
1.1.0 Alpha- XX/XX/XXXX
------------------------------
- Added type (a CLR type) attribut in result and parameterMap element.
- Patch from Luke Yang
- Updated schema.
- Added explicit open/close connection for DataAccess framework.
- Added support for NHibernate in DataAccess framework
- Added optional tag 'daoSessionHandlers' in dao.config to support new session handler (NHibernate)
- Changed 'name' attribut on 'context' tag to 'id' (dao.config)
- Changed 'name' attribut on 'daoSessionHandler' tag to 'id' (dao.config)
- Fixed JIRA IBATISNET-13
- Used Castle.DynamicProxy 1.0.3 for proxy.
- Fixed JIRA IBATISNET-12
- Added Unit Test for multiple/nested DAO Manager
- Added Xml Comment
- Fixed possible issue in ApplyParameterMap (https://sourceforge.net/forum/message.php?msg_id=2841897)
- Added support for C# using syntax in DataAccess/DataMapper
       * using ( IDalSession session = daoManager.OpenConnection() )
			{
			   ...db operations...
			}
       * using ( IDalSession session = daoManager.BeginTransaction() )
			{
			   ...db operations...
			   session.Complete(); // Commit
			}
	   * using ( IDalSession session = sqlMap.OpenConnection() )
			{
			   ...db operations...
			}
       * using ( IDalSession session = sqlMap.BeginTransaction() )
			{
			   ...db operations...
			   session.Complete(); // Commit
			}			
- Added support for Distributed Transaction à la Indigo with TransactionScope object 
  in iBATIS.Common.Transaction (see Unit test in CommonTests.Transaction  for usage)
       using (TransactionScope tx = new TransactionScope())
			{
			    // Open connection to database 1
                // Transaction will be automatically enlist into it
                // Execute update in database 1

               // Open connection to database 2
               // Transaction will be automatically enlist into it
               // Execute update in database 2
               
               // Open a MessageQueue
               // Transaction will be automatically enlist into it
               // Post message

              // the following code will be executed only if no exception
              // occured in the above code; since we got here ok, let's vote for commit;
              // in most if not all of the cases, this last line will be the same as below
			   tx.Complete(); 
			}
			// when “using” call Dispose on the transaction scope at the end
			// of the “using” code block, the "ambient" transaction will be commited only and only if
			// the Complete method have been called.


	Only supported in
	    - XP SP2 (or higher) 
	    - Windows Server 2003 
	    - XP SP1 + Hotfix 828741 
	and only in .Net 1.1.
	It CAN'T be used on Windows 2000.	
	
	Don't support nested TransactionScope.	
- Fixed bug for dynamic element isNotEqual (detected by Anders)
- Fixed possible issue in SessionContainer
- Refactoring of DaoSession
- Removed 'static' usage in DomDaoManagerBuilder
- Added support for embedded resource : only tag <properties ...>
  <properties embedded="database.config, IBatisNet.Test"/>
  and tag <sqlMap ...>
  <sqlMap embedded="Account.xml, IBatisNet.Test"/> 
  will support it. Syntax for embedded attribut
  'file name, the name of the assembly which contains the embedded resource'
- Removed 'assembly' attribut on <daoFactory> element of Dao.Config
  the implementation structure attribut of <dao> element become the namespace-qualified name of the class is specified, followed by a comma, followed by (at a bare minimum) the name of the assembly that contains the class.
- Removed 'static' usage in DomSqlMapBuilder
- Moved Alias management to IBatisNet.Common.Utilities
- Fixed request support 1032436, ByteArrayTypeHandler misses the last byte
- Fixed support request 1050704, Unable to use <selectKey> with useStatementNamespaces=true
- Added 'extends' attribute on statement, see Unit tests TestExtends*
- Improved configuration building
- Fixed issue on cache initialization

------------------------------
1.0.1 Alpha- 18/10/2004
------------------------------
- Used Apache.Avalon.DynamicProxy.dll for proxy.
- Fixed support request 1045775, Connection management : ThreadStatic under asp.net
- Marked property 'assembly' on typeAlias XML element as obsolete, the type attribut structure become the namespace-qualified name of the class is specified, followed by a comma, followed by (at a bare minimum) the name of the assembly that contains the class.
  Exemple : type="IBatisNet.Test.Domain.Order, IBatisNet.Test"
- Cleaning code, added comments
- Fixed support request 1043181, NUNit test TestInsertOrderViaExtendParameterMap
- TypeAlias refactoring, added a cache (improved perf from near 15%) 
- Used NUnit 2.2 to test
- Removed signing on assembly 

------------------------------
1.0.0 Alpha- 07/10/2004
------------------------------
- dao.config, sqlMap.config, providers.config must be place in the base directory of the application domain (same dir as app.config or web.config)
- removed tag 'providers' from config file.
- Rethink 'url', 'resource' notion (resource are loaded from the root directory of the application (relative path), url are valid path file:///c:/config/my.properties)
- Fixed Support Request 1032436 (ByteArrayTypeHandler misses the last byte)
- Fixed Support Requests 1007388 (SelectKey ignores namespace)
- Added 'url', 'resource' notion as in iBatis Java 
- Changed 'file' attribute from <sqlMap ... > tag to 'resource' name. 
- Added <generate > tag in statement tag <insert>, <delete>, <update>, <select> for simplified support for CRUD (see category.xml in NUnit test)
- Added BeginTransaction(IsolationLevel isolationLevel)
- Renamed SelectKeyStatement.cs in SelectKey.cs.
- In Providers.cs, renamed GetConnnection to GetConnection.
- In SqlMap, added 'extends' attribute to 'parameterMap' tag with NUnit test (see category test).
- In type cache, renamed 'Weack' type to 'Weak'
- In SqlMap, added global element <alias>. Same purpose as SqlMapConfig alias.
- In SqlMap, added <properties /> element to define an optional properties file.
- In SqlMapConfig, added an enclosing element <database> for <provider /> and <datasource />.
- In iBatisNet.DataMapper, added Mapper object (a singleton to access the SqlMapper defined by the SqlMap.Config)
- In ExecuteQueryList, added support for OutputParameters for strongly typed collection.
- In SqlMap, rename attribute 'name' to 'namespace'. 
- In typeAlias element, Renamed attribute 'class' to 'type' (SqlMap and SqlMapConfig).
- In typeAlias element, Renamed attribute 'name' to 'alias' (SqlMap and SqlMapConfig).
- In SqlMapConfig, removed <datasources> since only one dataSource element can be declared.
- In SqlMapConfig, rename <setting useFullyQualifiedStatementNames=... to <setting useStatementNamespaces=...
- In IBatisNet.DataMapper rename SqlMap class to SqlMapper class. SqlMap is the object graph. SqlMapper is the object which exposes SqlMap.
- In SqlMap, rename attribute 'name' to 'id' on resultMap, parameterMap, and statement elements.
- Removed Nausicaa references
- Renamed DaoException to DataAccessException
- Renamed SqlMapException to DataMapperException 
- Fixed bug in Dynamic sql elements
- Replaced Proxy generation code with Avalon code
- Added Unit test for Proxy


------------------------------
 0.9.0 - 21/06/2004
------------------------------
- Added Fix in PreparedStatementFactory for ByteFx.MySql provider
- Corrected Bug in sqlMap.Delete
- Implemented PaginatedList
- Added support for byte array type property.
- Added support for Enum type property.
- Removed requirement for daoSessionHandlers tag in dao.config
- Added providers tag in SqlMap.Config
- Changed name for IBatisNet.
- Splitted main dll in three : 
    IBatisNet.Common.dll for common API.
    IBatisNet.DataAccess.dll for DAO API.
    IBatisNet.DataMapper.dll for Mapper API.      
- Passed all Unit tests for provider SqlClient, OleDb, ObDc (which was not the case for older version
  because config was incorrect).
- Internal refactoring for support dynamic sql.
- Added support for Dynamic Sql.
- Improved overall performance.
- Added more NUnit tests.
- Added comment.
- Fixed bugs for OleDb, ObDc provider
- Fixed other bugs

------------------------------
 0.8.9 - -
------------------------------
 - Added comment
 - Corrected bug 
 - Added ConfigureAndWatch which monitor configuration files
 - Added tests for input, output parameter via hashtable in procedure call
 - Added examples for web and windows application
 - Added concurrency exception if no record was affected on update
 - Various minor code cleanups

 
------------------------------
 0.8.7 - 31/03/2004
------------------------------
 - Added cache implementation (LRU,FIFO, Memory)
 - Improved support for OLEDB, OBDC (All Unit tests are runned for Oldb or Obdc)
 - Added more tests
 - Improved/Cleaned code
 - Added useParameterPrefixInSql, useParameterPrefixInParameter attribut on provider
 - Completed schemas

 
------------------------------
 0.8.5 - 11/03/2004
------------------------------
 - Added optional Lazy Loading of IList properties (default=false)
 - Added generated selectKey element in insert statement
 - Added more tests
 
------------------------------
 0.8.0 - 26/02/2004
------------------------------
 - First release